{"version":3,"sources":["emission-calculator/index.ts","emission-calculator/types/result/index.ts","emission-calculator/types/result/emission-result-fields.type.ts","emission-calculator/constants/emission-calculator.constant.ts","emission-calculator/calculator/partial-emission-results.ts","emission-calculator/calculator/emission-calculator.ts","emission-calculator/calculator/index.ts","emission-calculator/types/input/emission-input.interface.ts","emission-calculator/util/energetic-mix-per-country.util.ts","emission-calculator/util/index.ts","shared/components/Logo/logo.svg","shared/components/Logo/Logo.tsx","core/components/NavigationHeader.tsx","state/util/action-helpers.util.ts","state/actions/navigation.actions.ts","state/constants/state.interface.ts","state/actions/emission-input.actions.ts","state/actions/emission-result.actions.ts","state/constants/initial-state.constant.ts","state/reducers/index.ts","state/reducers/navigation.reducer.ts","state/reducers/emission-input.reducer.ts","state/reducers/emission-result.reducer.ts","i18n/util/subject.ts","i18n/config.ts","i18n/util/translate.hoc.tsx","state/sagas/navigation.sagas.ts","state/sagas/emission-result.sagas.ts","state/sagas/emission-input.sagas.ts","state/sagas/index.ts","state/index.ts","emission-forms/components/LabelledDropdown.tsx","emission-forms/components/LabelledInput.tsx","emission-forms/components/EmissionFormWrapper.tsx","emission-forms/containers/EmissionCalculator.tsx","emission-forms/containers/CountrySelector.tsx","emission-forms/containers/PublicTransportForm.tsx","core/containers/SectionFormContainer.tsx","core/containers/SectionTabs.tsx","emission-chart/util/chart-format.util.ts","emission-chart/components/EmissionsChart.tsx","emission-chart/components/EmissionDetails.tsx","emission-chart/containers/EmissionChartContainer.tsx","emission-visualisation/components/SpritePanel.tsx","emission-visualisation/components/Sprite.tsx","emission-visualisation/containers/SectionVisualisationContainer.tsx","core/containers/ResultViewContainer.tsx","core/containers/LocaleSwitch.tsx","core/components/NavigationFooter.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["_calculator__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_types_result__WEBPACK_IMPORTED_MODULE_2__","o","_util__WEBPACK_IMPORTED_MODULE_3__","_emission_result_fields_type__WEBPACK_IMPORTED_MODULE_0__","_emission_result_interface__WEBPACK_IMPORTED_MODULE_1__","EmissionResultPartialFields","EmissionResultTotalField","FoodEmissionParams","TransportEmissionParams","PartialEmissionResult","housingConstruction","input","housingHeating","warmWater","airConditioning","fuelForTransport","_ref","transport","carKmPerWeek","carConstuction","publicTransport","airTravel","_ref2","annualHoursInAir","foodProduction","_ref3","food","meatPerWeek","consumption","electricity","deforestation","commonServices","totalAnnualEmission","undefined","calculateEmissionResults","partialResultCalculatorMap","partialResults","reduce","result","key","fn","value","Object","objectSpread","defineProperty","getPartialResults","sum","calculateEmissionResultsWithPartials","HeatingType","PlaneClass","BuildingType","BuildingMaterial","VehicleType","VehicleFuel","ZERO_MIX","coal","nuclear","water","wind","solar","getEnergeticMixPerCountry","countryCode","module","exports","p","Logo","react_default","a","createElement","src","logo","className","alt","NavigationHeader","Logo_Logo","build","createAction","type","payload","Section","InitAppType","InitApp","SetNavigationSectionType","SetNavigationSection","section","DetermineNavigationSectionType","DetermineNavigationSection","SetLocaleType","SetLocale","locale","SetCountryCodeType","SetCountryCode","SetEnergeticMixType","SetEnergeticMix","energeticMix","UpdatePublicTransportType","UpdatePublicTransport","UpdateFoodType","UpdateFood","CalculateEmissionResultsType","CalculateEmissionResults","SetEmissionsResultType","SetEmissionsResult","emissions","InitialAppState","navigation","Housing","emissionInput","country","emissionResult","RootReducer","combineReducers","state","arguments","length","action","NavigationActions","EmissionInputActions","EmissionResultActions","Subject","classCallCheck","this","handlers","createClass","param","forEach","handler","_this","toConsumableArray","concat","filter","h","LocaleConfig","localeSubject","en","require","pl","I18n","setTranslations","setLocale","next","subscribe","tFn","t","bind","lFn","l","withTranslate","Component","_React$Component","WithTranslate","possibleConstructorReturn","getPrototypeOf","apply","inherits","sub","subscribeToChangeLocale","forceUpdate","assign","props","React","initAppSaga","regenerator_default","mark","wrap","_context","prev","put","stop","logOnNavigateSaga","_context2","setLocaleSaga","_context3","changeLocale","NavigationSagas","takeEvery","calculateEmissionResultSaga","select","sent","call","EmissionResultSagas","setEnergeticMixSaga","mix","EmissionInputSagas","RootSaga","all","_marked","composeEnhancers","window","compose","LabelledDropdown","_LabelledDropdown","isOpen","toggleDropdown","assertThisInitialized","event","setState","prevState","_this$props","label","valueChange","options","currentLabel","find","option","tag","reactstrap_es","toggle","caret","map","onClick","LabelledInput","_LabelledInput","addon","placeholder","addonType","onChange","currentTarget","EmissionFormWrapper","title","footer","children","_EmissionCalculator","Fragment","_this$props2","EmissionFormWrapper_EmissionFormWrapper","renderSectionA","renderSectionB","EmissionCalculator","connect","dispatch","bindActionCreators","OPTIONS","_CountrySelector","Math","round","CountrySelector","_PublicTransportForm","PublicTransportForm","_SectionFormContainer","activeTab","tabId","WaterAndAirConditioning","PrivateTransport","SectionFormContainer","SECTION_ITEMS","PublicTransport","Food","Consumption","_SectionTabs","activeSection","setSection","classnames","active","tabs","item","renderLink","SectionTabs","chartFieldAttributes","field","fieldName","toLowerCase","EmissionsChart","emission","limit","heightPercentage","style","height","width","totalResult","toFixed","renderChartSection","EmissionDetails","color","minWidth","borderRadius","renderDetailBadge","REF_EMISSION","_EmissionChartContainer","refEmissions","maxEmission","max","EmissionDetails_EmissionDetails","EmissionsChart_EmissionsChart","EmissionChartContainer","SpritePanel","_getPrototypeOf2","_len","args","Array","_key","imageRef","createRef","file","position","ref","Sprite","visible","size","left","right","top","bottom","_SectionVisualisationContainer","SpritePanel_SpritePanel","Sprite_Sprite","renderHousing","renderWaterAndAirConditioning","renderPublicTransport","renderPrivateTransport","renderFood","renderConsumption","SectionVisualisationContainer","_ResultViewContainer","ResultViewContainer","LOCALES","_LocaleSwitch","LocaleSwitch","NavigationFooter","dangerousHTML","App","initApp","document","NavigationHeader_NavigationHeader","role","NavigationFooter_NavigationFooter","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","configure","ReactDOM","render","es","store","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSagaTask","sagaTask","run","configureStore","src_App","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.421083e4.chunk.js","sourcesContent":["export { calculateEmissionResults } from './calculator';\r\nexport * from './types/input';\r\nexport * from './types/result'\r\nexport * from './util';\r\n","export * from './emission-result-fields.type';\r\nexport * from './emission-result.interface';\r\n","import { EmissionResultField } from \"./emission-result.interface\";\n\nexport const EmissionResultPartialFields: EmissionResultField[] = [\n    'housingConstruction',\n    'housingHeating',\n    'warmWater',\n    'airConditioning',\n    'fuelForTransport',\n    'carConstuction',\n    'publicTransport',\n    'airTravel',\n    'foodProduction',\n    'consumption',\n    'electricity',\n    'deforestation',\n    'commonServices'\n];\n\nexport const EmissionResultTotalField: EmissionResultField = 'totalAnnualEmission';","export const WeeksPerYear = 52;\n\nexport const FoodEmissionParams = {\n    perMeatDailyMeatConsumption: 2,\n};\n\nexport const TransportEmissionParams = {\n    perKmOfCarTravel: 0.001,\n    perAnnualHourInAir: 0.3\n};","import { EmissionInput } from \"../types/input\";\nimport { EmissionResultField } from \"../types/result\";\nimport { FoodEmissionParams, WeeksPerYear, TransportEmissionParams } from \"../constants\";\n\nexport type PartialResultCalculatorMap = {\n    [key in EmissionResultField]: (input: EmissionInput) => number;\n};\n\nexport const PartialEmissionResult: PartialResultCalculatorMap = {\n    housingConstruction: (input) => {\n        return 0.2;\n    },\n    housingHeating: (input) => {\n        return 0.5;\n    },\n    warmWater: (input) => {\n        return 1.25;\n    },\n    airConditioning: (input) => {\n        return 0.12;\n    },\n    fuelForTransport: ({ transport }) => {\n        return transport.carKmPerWeek * WeeksPerYear * TransportEmissionParams.perKmOfCarTravel;\n    },\n    carConstuction: (input) => {\n        return 0.9;\n    },\n    publicTransport: (input) => {\n        return 1.2;\n    },\n    airTravel: ({ transport }) => {\n        return transport.annualHoursInAir * TransportEmissionParams.perAnnualHourInAir;\n    },\n\n    foodProduction: ({ food }) => {\n        return food.meatPerWeek * FoodEmissionParams.perMeatDailyMeatConsumption;\n    },\n    consumption: (input) => {\n        return 2.6;\n    },\n    electricity: (input) => {\n        return 1.1;\n    },\n    deforestation: (input) => {\n        return 0.5;\n    },\n    commonServices: (input) => {\n        return 3.5;\n    },\n\n    totalAnnualEmission: undefined\n};","import { EmissionInput } from \"../types/input\";\nimport { EmissionResult, EmissionResultPartialFields } from \"../types/result\";\nimport { PartialResultCalculatorMap, PartialEmissionResult } from \"./partial-emission-results\";\n\nexport function calculateEmissionResults(input: EmissionInput): EmissionResult {\n    return calculateEmissionResultsWithPartials(input, PartialEmissionResult);\n}\n\nexport function calculateEmissionResultsWithPartials(input: EmissionInput, partialResultCalculatorMap: PartialResultCalculatorMap) {\n    const partialResults = getPartialResults(input, partialResultCalculatorMap);\n\n    const totalAnnualEmission = getTotalResult(partialResults);\n    \n    const resultWithTotal = { ...partialResults, totalAnnualEmission };\n\n    return resultWithTotal;\n}\n\nexport function getPartialResults(input: EmissionInput, partialResultCalculatorMap: PartialResultCalculatorMap): EmissionResult {\n    return EmissionResultPartialFields.reduce((result, key) => {\n        const fn = partialResultCalculatorMap[key];\n        const value = fn ? fn(input) : 0;\n        return { ...result, [key]: value };\n    }, {}) as EmissionResult;\n}\n\nexport function getTotalResult(result: EmissionResult): number {\n    return EmissionResultPartialFields.reduce((sum, key) => sum + (result[key] || 0), 0);\n}","export * from './emission-calculator';\r\n","export interface EmissionInputCountry {\n    countryCode: string;\n    energeticMix: EnergeticMix;\n}\n\nexport interface EnergeticMix {\n    coal: number;\n    nuclear: number;\n    water: number;\n    wind: number;\n    solar: number;\n}\n\nexport enum HeatingType {\n    Central,\n    HeatingOil,\n    Gas,\n    Coal,\n    CoalModern,\n    Electric,\n    Biomas\n}\n\nexport enum PlaneClass {\n    Economy,\n    Business,\n    First\n}\n\nexport enum BuildingType {\n    SingleFamilyHouse,\n    TerraceHouse,\n    FlatInBuilding\n}\n\nexport enum BuildingMaterial {\n    Concrete,\n    Brick,\n    Wood\n}\n\nexport enum VehicleType {\n    Bicycle,\n    Motorbike,\n    CarSmall,\n    CarMedium,\n    CarLarge,\n    CarVeryLarge\n}\n\nexport enum VehicleFuel {\n    Gasoline,\n    Diesel,\n    Gas,\n    Hybrid,\n    Electric\n}\n\nexport interface EmissionInputHousing {\n    buildingType: BuildingType;\n    buildingMaterial: BuildingMaterial;\n    energeticEfficiency: number; // Bardzo słaba, ..., Przeciętna, Doskonała, Dom pasywny\n    area: number;\n    numberOfPeople: number;\n}\n\nexport interface EmissionInputWater {\n    bathsWeekly: number;\n    showersWeekly: number;\n    litresPerBath: number; // 50 small bath - 550 big jacuzzi\n    waterHeatingType: HeatingType;\n}\n\nexport interface EmissionInputPrivateVehicle {\n    type: VehicleType; // Big = Terain, Very Large = Hummer\n    age: number;\n    fuelType: VehicleFuel;\n    fuelUsage: number;\n    travelWeeklyKm: number;\n    freqOfTravelWithPassengers: number; // 0% - 100%\n    airConditioning: boolean;\n}\n\nexport interface EmissionInputPrivateTransport {\n    vehicles: EmissionInputPrivateVehicle[];\n}\n\nexport interface EmissionInputPublicTransport {\n    cityBusTravelWeeklyKm: number;\n    longDistanceBusTravelWeeklyKm: number;\n    microBusTravelWeeklyKm: number;\n    metroTramTravelWeeklyKm: number;\n    taxiTravelWeeklyKm: number;\n    suburbanTrainTravelWeeklyKm: number;\n    longDistanceTrainTravelWeeklyKm: number;\n    airClass: PlaneClass;\n    shortDistanceAirTravelAnnualHours: number;\n    longDistanceAirTravelAnnualHours: number;\n}\n\n\nexport interface EmissionInputConsumption {\n    incomeLevel: number; // Śr. krajowa + %-ty\n    recyclingRate: number; // Brak recyklingu, Część śmieci trafia do recyklingu, Duzo, Wiekszosc\n    clothing: number; // Uzywane, Nowe gdy stare sa zniszczone, Regularnie nowe, modne\n    packagingType: number; // Nie zwracam uwagi, Minimalnie opakowane, Lubie ladne opakowania\n    houseEquipment: number; // Uzywane, Nowe ale uzywam dlugo, Kupuje czesto nowe i modne rzeczy\n    entertainmentConsumption: number; // Spacery i rower, Kina i lokale, Techniczne - quady i spadochroniarstwo\n    electricityUsage: number; // Bardzo oszczednie, Staram sie nie marnowac, Nie przejmuje sie - stać mnie na to\n}\n\nexport interface EmissionInputTransport {\n    carKmPerWeek: number;\n    annualHoursInAir: number;\n}\n\nexport interface EmissionInputFood {\n    averageAmountOfFood: number; // Mało, Średnio itd.\n    foodSourceLocality: number; // Jem lokalną bez marketów, mały sklep z zyw. lokalna, Towary lokalne i sezonowe, Nie zwracam uwagi na sezonowosc, Egzotyczne\n    meatPerWeek: number; // Brak produktów zw. (weganin), Bez mięsa (wegetarianin), 1-2 razy, 3-6 razy, codziennie\n    frozenFoodWeekly: number; // wcale, rzadko, 1x tydzień, 2-3 tygodniowo, codziennie\n    refridgeratorEfficiency: number; // Brak, Niskoelektywa G-D, Średioefektywna C-B, Energooszczędna A, Bardzo A+\n    ovenEfficiency: number; // Elektryczna zwykła, indukcyjna, gazowa, węglowa, Drewno\n    additionalFreezer: boolean;\n    dishwasher: boolean;\n}\n\nexport interface EmissionInput {\n    country: EmissionInputCountry;\n    transport: EmissionInputTransport;\n    \n    housing: EmissionInputHousing;\n    water: EmissionInputWater;\n    privateTransport: EmissionInputPrivateTransport;\n    publicTransport: EmissionInputPublicTransport;\n    food: EmissionInputFood;\n    consumption: EmissionInputConsumption;\n}","import { EnergeticMix } from \"../types/input\";\n\nconst ZERO_MIX: EnergeticMix = {\n    coal: 0,\n    nuclear: 0,\n    water: 0,\n    wind: 0,\n    solar: 0\n};\n\nexport function getEnergeticMixPerCountry(countryCode: string): EnergeticMix {\n    switch (countryCode) {\n        case 'pl':\n            return { ...ZERO_MIX, coal: 0.8, water: 0.2 };\n        default:\n            return { ...ZERO_MIX, coal: 0.5, nuclear: 0.2, solar: 0.1, wind: 0.1, water: 0.2 };\n    }\n}","export * from './energetic-mix-per-country.util';\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './logo.scss';\n\nexport const Logo = () => <img src={logo} className=\"App-logo\" alt=\"logo\" />;","import React from 'react';\nimport { Translate } from 'react-i18nify';\nimport { Logo } from '../../shared';\n\nexport const NavigationHeader = () => (\n    <header>\n        <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n            <span className=\"navbar-brand\">\n                <Logo />\n                <Translate value=\"application.title\" />\n            </span>\n        </nav>\n    </header>\n);","export interface TypedAction<T, P> {\n    readonly type: T;\n    readonly payload?: P;\n}\n\nexport function createAction<T extends string, P>(type: T, payload?: P): TypedAction<T, P> {\n    return { type, payload };\n}","import { createAction } from '../util';\nimport { Section } from '../constants';\n\nexport type ActionsTypes = InitAppAction | SetNavigationSectionAction | DetermineNavigationSectionAction;\n\nexport const InitAppType = '[NAVIGATION] InitApp';\nexport type InitAppAction = ReturnType<typeof InitApp>;\nexport const InitApp = () => createAction(InitAppType);\n\nexport const SetNavigationSectionType = '[NAVIGATION] SetNavigationSection';\nexport type SetNavigationSectionAction = ReturnType<typeof SetNavigationSection>;\nexport const SetNavigationSection = (section: Section) => createAction(SetNavigationSectionType, section);\n\nexport const DetermineNavigationSectionType = '[NAVIGATION] DetermineNavigationSection';\nexport type DetermineNavigationSectionAction = ReturnType<typeof DetermineNavigationSection>;\nexport const DetermineNavigationSection = () => createAction(DetermineNavigationSectionType);\n\nexport const SetLocaleType = '[NAVIGATION] SetLocale';\nexport type SetLocaleAction = ReturnType<typeof SetLocale>;\nexport const SetLocale = (locale: string) => createAction(SetLocaleType, locale);","import { EmissionInput, EmissionResult } from \"../../emission-calculator\";\n\nexport enum Section {\n    Country = 'COUNTRY',\n    Housing = 'HOUSING',\n    WaterAndAirConditioning = 'WATER_AND_AIR_CONDITIONING',\n    PrivateTransport = 'PRIVATE_TRANSPORT',\n    PublicTransport = 'PUBLIC_TRANSPORT',\n    Food = 'FOOD',\n    Consumption = 'CONSUMPTION',\n    EmissionResults = 'EMISSION_RESULTS'\n}\n\nexport interface NavigationState {\n    section: Section;\n}\n\nexport type EmissionInputState = EmissionInput;\nexport type EmissionResultState = EmissionResult;\n\nexport interface AppState {\n    navigation: NavigationState;\n    emissionInput: EmissionInputState;\n    emissionResult: EmissionResultState;\n}","import { createAction } from '../util';\nimport { EmissionInputTransport, EmissionInputFood, EnergeticMix } from '../../emission-calculator';\n\nexport type ActionsTypes = SetCountryCodeAction | SetEnergeticMixAction | UpdatePublicTransportAction | UpdateFoodAction;\n\nexport const SetCountryCodeType = '[FOSSIL_USAGE] SetCountryCode';\nexport type SetCountryCodeAction = ReturnType<typeof SetCountryCode>;\nexport const SetCountryCode = (countryCode: string) => createAction(SetCountryCodeType, countryCode);\n\nexport const SetEnergeticMixType = '[FOSSIL_USAGE] SetEnergeticMix';\nexport type SetEnergeticMixAction = ReturnType<typeof SetEnergeticMix>;\nexport const SetEnergeticMix = (energeticMix: EnergeticMix) => createAction(SetEnergeticMixType, energeticMix);\n\nexport const UpdatePublicTransportType = '[FOSSIL_USAGE] UpdatePublicTransport';\nexport type UpdatePublicTransportAction = ReturnType<typeof UpdatePublicTransport>;\nexport const UpdatePublicTransport = (transport: EmissionInputTransport) => createAction(UpdatePublicTransportType, transport);\n\nexport const UpdateFoodType = '[FOSSIL_USAGE] UpdateFood';\nexport type UpdateFoodAction = ReturnType<typeof UpdateFood>;\nexport const UpdateFood = (food: EmissionInputFood) => createAction(UpdateFoodType, food);","import { createAction } from '../util';\nimport { EmissionResultState } from '../constants';\n\nexport type ActionsTypes = CalculateEmissionResultsAction | SetEmissionsResultAction;\n\nexport const CalculateEmissionResultsType = '[EMISSION_RESULT] CalculateEmissionResults';\nexport type CalculateEmissionResultsAction = ReturnType<typeof CalculateEmissionResults>;\nexport const CalculateEmissionResults = () => createAction(CalculateEmissionResultsType);\n\nexport const SetEmissionsResultType = '[EMISSION_RESULT] SetEmissionsResult';\nexport type SetEmissionsResultAction = ReturnType<typeof SetEmissionsResult>;\nexport const SetEmissionsResult = (emissions: EmissionResultState) => createAction(SetEmissionsResultType, emissions);","import { AppState, Section } from \"./state.interface\";\n\nexport const InitialAppState: AppState = {\n    navigation: {\n        section: Section.Housing\n    },\n    emissionInput: {\n        country: {\n            countryCode: 'pl',\n            energeticMix: {\n                coal: 0,\n                nuclear: 0,\n                solar: 0,\n                water: 0,\n                wind: 0\n            }\n        },\n        transport: {\n            carKmPerWeek: null,\n            annualHoursInAir: null\n        },\n        food: {\n            meatPerWeek: 1\n        }\n    } as any,\n    emissionResult: {\n        housingConstruction: 0,\n        housingHeating: 0,\n        warmWater: 0,\n        airConditioning: 0,\n        fuelForTransport: 0,\n        carConstuction: 0,\n        publicTransport: 0,\n        airTravel: 0,\n        foodProduction: 0,\n        consumption: 0,\n        electricity: 0,\n        deforestation: 0,\n        commonServices: 0,\n        totalAnnualEmission: 0\n    }\n}","import { combineReducers } from 'redux';\nimport { NavigationReducer } from './navigation.reducer';\nimport { emissionInputReducer } from './emission-input.reducer';\nimport { emissionResultReducer } from './emission-result.reducer';\n\nexport const RootReducer = combineReducers({\n    navigation: NavigationReducer,\n    emissionInput: emissionInputReducer,\n    emissionResult: emissionResultReducer\n});","import { NavigationActions } from '../actions';\nimport { InitialAppState, NavigationState } from '../constants';\n\nexport const NavigationReducer = (state: NavigationState = InitialAppState.navigation, action: NavigationActions.ActionsTypes): NavigationState => {\n    switch (action.type) {\n        case NavigationActions.SetNavigationSectionType:\n            return { ...state, section: action.payload };\n        default:\n            return state;\n    }\n};","import { EmissionInputActions } from '../actions';\nimport { InitialAppState, EmissionInputState } from '../constants';\n\nexport const emissionInputReducer = (state: EmissionInputState = InitialAppState.emissionInput, action: EmissionInputActions.ActionsTypes): EmissionInputState => {\n    switch (action.type) {\n        case EmissionInputActions.SetCountryCodeType:\n            return { ...state, country: { ...state.country, countryCode: action.payload } };\n        case EmissionInputActions.SetEnergeticMixType:\n            return { ...state, country: { ...state.country, energeticMix: action.payload } };\n        case EmissionInputActions.UpdatePublicTransportType:\n            return { ...state, transport: { ...state.transport, ...action.payload } };\n        case EmissionInputActions.UpdateFoodType:\n            return { ...state, food: { ...state.food, ...action.payload } };\n        default:\n            return state;\n    }\n};","import { EmissionResultActions } from '../actions';\nimport { InitialAppState, EmissionResultState } from '../constants';\n\nexport const emissionResultReducer = (state: EmissionResultState = InitialAppState.emissionResult, action: EmissionResultActions.ActionsTypes): EmissionResultState => {\n    switch (action.type) {\n        case EmissionResultActions.SetEmissionsResultType:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};","interface Handler<P> {\n    (p: P): void;\n}\n\nexport class Subject<P> {\n    private handlers: Handler<P>[] = [];\n\n    next(param: P) {\n        this.handlers.forEach(handler => handler(param));\n    }\n\n    subscribe(handler: Handler<P>): Function {\n        this.handlers = [...this.handlers, handler];\n        return () => {\n            this.handlers = this.handlers.filter(h => h !== handler);\n        };\n    }\n}\n","import { I18n } from 'react-i18nify';\nimport { Subject } from './util/subject';\n\nclass LocaleConfigClass {\n    private localeSubject = new Subject<string>();\n\n    configure(locale: string) {\n        const en = require('./languages/en.json');\n        const pl = require('./languages/pl.json');\n    \n        I18n.setTranslations({ en, pl });\n    \n        I18n.setLocale(locale);\n    }\n\n    changeLocale(locale: string) {\n        I18n.setLocale(locale);\n        this.localeSubject.next(locale);\n    }\n\n    subscribeToChangeLocale(handler: (locale: string) => void): Function {\n        return this.localeSubject.subscribe(handler);\n    }\n};\n\nexport const LocaleConfig = new LocaleConfigClass();","import React from \"react\";\nimport { I18n } from \"react-i18nify\";\nimport { LocaleConfig } from \"../config\";\n\nconst tFn = I18n.t.bind(I18n);\nconst lFn = I18n.l.bind(I18n);\n\nexport interface InjectedTranslateProps {\n    t?: Function;\n    l?: Function;\n}\n\nexport function withTranslate<P>(\n    Component: React.ComponentType<P>\n) {\n    return class WithTranslate extends React.Component<P> {\n        private sub: Function;\n\n        componentWillMount() {\n            this.sub = LocaleConfig.subscribeToChangeLocale(() => {\n                this.forceUpdate();\n            });\n        }\n\n        componentWillUnmount() {\n            this.sub && this.sub();\n        }\n\n        render() {\n            return <Component {...this.props} t={tFn} l={lFn} />;\n        }\n    };\n}\n","import { takeEvery, put } from 'redux-saga/effects';\nimport { NavigationActions, EmissionInputActions } from '../actions';\nimport { LocaleConfig } from '../../i18n';\n\nexport const initAppSaga = function* () {\n    yield put(EmissionInputActions.SetCountryCode('pl'));\n}\n\nexport const logOnNavigateSaga = function* (action: NavigationActions.SetNavigationSectionAction) {\n    yield put(NavigationActions.DetermineNavigationSection());\n}\n\nexport const setLocaleSaga = function*(action: NavigationActions.SetLocaleAction) {\n    LocaleConfig.changeLocale(action.payload);\n}\n\nexport const NavigationSagas = [\n    takeEvery(NavigationActions.InitAppType, initAppSaga),\n    takeEvery(NavigationActions.SetNavigationSectionType, logOnNavigateSaga),\n    takeEvery(NavigationActions.SetLocaleType, setLocaleSaga)\n];","import { takeEvery, put, select, call } from 'redux-saga/effects';\nimport { EmissionResultActions, EmissionInputActions } from '../actions';\nimport { AppState } from '../constants';\nimport { calculateEmissionResults } from '../../emission-calculator';\n\nexport const calculateEmissionResultSaga = function* () {\n    const emissionInput = yield select<AppState>(state => state.emissionInput);\n\n    const emissionResult = yield call(calculateEmissionResults, emissionInput);\n\n    yield put(EmissionResultActions.SetEmissionsResult(emissionResult));\n};\n\nexport const EmissionResultSagas = [\n    takeEvery([\n        EmissionResultActions.CalculateEmissionResultsType,\n        EmissionInputActions.SetEnergeticMixType,\n        EmissionInputActions.UpdatePublicTransportType,\n        EmissionInputActions.UpdateFoodType\n    ], calculateEmissionResultSaga)\n];","import { takeEvery, put } from 'redux-saga/effects';\nimport { EmissionInputActions } from '../actions';\nimport { getEnergeticMixPerCountry } from '../../emission-calculator';\n\nexport const setEnergeticMixSaga = function* (action: EmissionInputActions.SetCountryCodeAction) {\n    const mix = getEnergeticMixPerCountry(action.payload);\n\n    yield put(EmissionInputActions.SetEnergeticMix(mix));\n};\n\nexport const EmissionInputSagas = [\n    takeEvery(EmissionInputActions.SetCountryCodeType, setEnergeticMixSaga)\n];","import { all } from 'redux-saga/effects';\nimport { NavigationSagas } from './navigation.sagas';\nimport { EmissionResultSagas } from './emission-result.sagas';\nimport { EmissionInputSagas } from './emission-input.sagas';\n\nexport function* RootSaga() {\n    yield all([\n        ...NavigationSagas,\n        ...EmissionInputSagas,\n        ...EmissionResultSagas\n    ]);\n}","export * from './actions';\nexport * from './constants';\n\nimport { applyMiddleware, compose, createStore, Store } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { AppState, InitialAppState } from './constants';\nimport { RootReducer } from './reducers';\nimport { RootSaga } from './sagas';\n\nconst composeEnhancers = (window as any)['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] || compose;\n\nexport const configureStore = (initialState: AppState = InitialAppState): Store<AppState> => {\n    const sagaMiddleware = createSagaMiddleware();\n\n    const store: any = createStore(RootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\n    store.runSagaTask = () => (store.sagaTask = sagaMiddleware.run(RootSaga as any));\n\n    store.runSagaTask();\n\n    return store;\n};","import React from 'react';\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\nimport { Translate } from 'react-i18nify';\nimport { withTranslate, InjectedTranslateProps } from '../../i18n';\n\ntype Option = { value: any, label: string };\n\ninterface Props extends InjectedTranslateProps {\n    label?: string;\n    value: any;\n    valueChange: (value: any) => any;\n    options: Option[];\n}\n\nexport class _LabelledDropdown extends React.Component<Props, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = { isOpen: false };\n\n        this.toggleDropdown = this.toggleDropdown.bind(this);\n    }\n\n    toggleDropdown(event: Event) {\n        this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n    }\n\n    render() {\n        const { t, label, value, valueChange, options } = this.props;\n\n        const currentLabel = options.find(option => option.value === value);\n\n        return (\n            <div>\n                { !!label ? <Translate className=\"font-weight-light mb-2\" tag=\"p\" value={label} /> : null }\n                <Dropdown isOpen={this.state.isOpen} toggle={this.toggleDropdown}>\n                    <DropdownToggle caret>\n                        { currentLabel ? currentLabel.label : value }\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        {\n                            options.map(option => (\n                                <DropdownItem key={option.value} onClick={() => valueChange(option.value)}>\n                                    {t(option.label)}\n                                </DropdownItem>\n                            ))\n                        }\n                    </DropdownMenu>\n                </Dropdown>\n            </div>\n        );\n    }\n}\n\nexport const LabelledDropdown = withTranslate(_LabelledDropdown);","import React from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { Translate } from 'react-i18nify';\nimport { InjectedTranslateProps, withTranslate } from \"../../i18n\";\n\ninterface Props extends InjectedTranslateProps {\n    label?: string;\n    addon?: string;\n    placeholder?: string;\n    value: any;\n    valueChange: (value: any) => any;\n}\n\nexport class _LabelledInput extends React.Component<Props> {\n    render() {\n        const { t, label, value, valueChange, addon, placeholder } = this.props;\n\n        return (\n            <div>\n                <Translate className=\"font-weight-light mb-2\" tag=\"p\" value={label} />\n                <InputGroup>\n                    {addon ? (\n                        <InputGroupAddon addonType=\"prepend\">\n                            {addon}\n                        </InputGroupAddon>\n                    ) : null}\n                    <Input\n                        placeholder={t(placeholder)}\n                        type=\"number\"\n                        value={value || ''}\n                        onChange={event => valueChange(event.currentTarget.value)}\n                    />\n                </InputGroup>\n            </div>\n        );\n    }\n}\n\nexport const LabelledInput = withTranslate(_LabelledInput);\n","import React from \"react\";\nimport { Translate } from \"react-i18nify\";\nimport { Card, CardBody, CardFooter, CardHeader } from \"reactstrap\";\n\nexport const EmissionFormWrapper = ({ title, footer, children }: any) => (\n    <Card>\n        <CardHeader>\n            <Translate className=\"font-weight-light\" value={title} />\n        </CardHeader>\n        <CardBody>{children}</CardBody>\n        <CardFooter>\n            <div className=\"font-weight-light d-flex justify-content-between\">\n                {footer ? <Translate value={footer} /> : null}\n            </div>\n        </CardFooter>\n    </Card>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { AppState, EmissionInputActions } from '../../state';\nimport { EmissionFormWrapper, LabelledDropdown, LabelledInput } from '../components';\n\nclass _EmissionCalculator extends React.Component<any> {\n    renderSectionA() {\n        const { transport, UpdatePublicTransport } = this.props;\n\n        return (\n            <>\n                <h4 className=\"font-weight-light\">Transport:</h4>\n                <div>\n                    <div className=\"w-75\">\n                        <LabelledInput\n                            label=\"transport.enterWeeklyCarUsage\"\n                            addon=\"km\"\n                            placeholder=\"Ile km podróżujesz samochodem tygodniowo?\"\n                            value={transport.carKmPerWeek}\n                            valueChange={value => UpdatePublicTransport({ carKmPerWeek: value })}>\n                        </LabelledInput>\n                    </div>\n                </div>\n                <div className=\"pt-3\">\n                    <div className=\"w-75\">\n                        <LabelledInput\n                            label=\"transport.enterAnnualPlaneHours\"\n                            addon=\"godziny\"\n                            placeholder=\"Ile godzin spędzasz rocznie w podróży samolotem?\"\n                            value={transport.annualHoursInAir}\n                            valueChange={value => UpdatePublicTransport({ annualHoursInAir: value })}>\n                        </LabelledInput>\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n\n    renderSectionB() {\n        const { food, UpdateFood } = this.props;\n\n        const options = [\n            { value: 0, label: 'Jestem wegetarianinem/-ką' },\n            { value: 1, label: 'Raz w tygodniu' },\n            { value: 2, label: 'Dość rzadko' },\n            { value: 7, label: 'Codziennie' }\n        ];\n\n        return (\n            <>\n                <h4 className=\"font-weight-light\">Żywność:</h4>\n                <div>\n                    <LabelledDropdown\n                        label=\"food.howOftenDoYouConsumeFood\"\n                        value={food.meatPerWeek}\n                        valueChange={value => UpdateFood({ meatPerWeek: value })}\n                        options={options}>\n                    </LabelledDropdown>\n                </div>\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <EmissionFormWrapper title=\"Housing\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        {this.renderSectionA()}\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        {this.renderSectionB()}\n                    </div>\n                </div>\n            </EmissionFormWrapper>\n        );\n    }\n}\n\nfunction mapStateToProps({ emissionInput }: AppState) {\n    return {\n        transport: emissionInput.transport,\n        food: emissionInput.food\n    };\n};\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators(\n        {\n            UpdatePublicTransport: EmissionInputActions.UpdatePublicTransport,\n            UpdateFood: EmissionInputActions.UpdateFood\n        },\n        dispatch\n    );\n}\n\nexport const EmissionCalculator = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_EmissionCalculator);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { AppState, EmissionInputActions } from '../../state';\nimport { LabelledDropdown } from '../components';\n\nconst OPTIONS = [\n    { value: 'pl', label: 'Polska' },\n    { value: 'gb', label: 'Wielka Brytania' },\n    { value: 'us', label: 'Stany Zjednoczone' },\n    { value: 'de', label: 'Niemcy' }\n];\n\nclass _CountrySelector extends React.Component<any> {\n    render() {\n        const { energeticMix, countryCode, SetCountryCode } = this.props;\n\n        return (\n            <>\n                <LabelledDropdown\n                    label=\"country.selectCountry\"\n                    value={countryCode}\n                    valueChange={value => SetCountryCode(value)}\n                    options={OPTIONS}>\n                </LabelledDropdown>\n                <div>\n                    <small>\n                        Miks energetyczny: węgiel {Math.round(energeticMix.coal * 100)}%, wiatrowe {Math.round(energeticMix.wind * 100)}%, etc.\n                    </small>\n                </div>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps({ emissionInput }: AppState) {\n    return {\n        countryCode: emissionInput.country.countryCode,\n        energeticMix: emissionInput.country.energeticMix\n    };\n};\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators(\n        {\n            SetCountryCode: EmissionInputActions.SetCountryCode\n        },\n        dispatch\n    );\n}\n\nexport const CountrySelector = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_CountrySelector);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { AppState, EmissionInputActions } from '../../state';\nimport { EmissionFormWrapper, LabelledDropdown, LabelledInput } from '../components';\n\nclass _PublicTransportForm extends React.Component<any> {\n    renderSectionA() {\n        const { transport, UpdatePublicTransport } = this.props;\n\n        return (\n            <>\n                <h4 className=\"font-weight-light\">Transport:</h4>\n                <div>\n                    <div className=\"w-75\">\n                        <LabelledInput\n                            label=\"transport.enterWeeklyCarUsage\"\n                            addon=\"km\"\n                            placeholder=\"Ile km podróżujesz samochodem tygodniowo?\"\n                            value={transport.carKmPerWeek}\n                            valueChange={value => UpdatePublicTransport({ carKmPerWeek: value })}>\n                        </LabelledInput>\n                    </div>\n                </div>\n                <div className=\"pt-3\">\n                    <div className=\"w-75\">\n                        <LabelledInput\n                            label=\"transport.enterAnnualPlaneHours\"\n                            addon=\"godziny\"\n                            placeholder=\"Ile godzin spędzasz rocznie w podróży samolotem?\"\n                            value={transport.annualHoursInAir}\n                            valueChange={value => UpdatePublicTransport({ annualHoursInAir: value })}>\n                        </LabelledInput>\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n\n    renderSectionB() {\n        const { food, UpdateFood } = this.props;\n\n        const options = [\n            { value: 0, label: 'Jestem wegetarianinem/-ką' },\n            { value: 1, label: 'Raz w tygodniu' },\n            { value: 2, label: 'Dość rzadko' },\n            { value: 7, label: 'Codziennie' }\n        ];\n\n        return (\n            <>\n                <h4 className=\"font-weight-light\">Żywność:</h4>\n                <div>\n                    <LabelledDropdown\n                        label=\"food.howOftenDoYouConsumeFood\"\n                        value={food.meatPerWeek}\n                        valueChange={value => UpdateFood({ meatPerWeek: value })}\n                        options={options}>\n                    </LabelledDropdown>\n                </div>\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <EmissionFormWrapper title=\"Housing\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        {this.renderSectionA()}\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        {this.renderSectionB()}\n                    </div>\n                </div>\n            </EmissionFormWrapper>\n        );\n    }\n}\n\nfunction mapStateToProps({ emissionInput }: AppState) {\n    return {\n        transport: emissionInput.transport,\n        food: emissionInput.food\n    };\n};\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators(\n        {\n            UpdatePublicTransport: EmissionInputActions.UpdatePublicTransport,\n            UpdateFood: EmissionInputActions.UpdateFood\n        },\n        dispatch\n    );\n}\n\nexport const PublicTransportForm = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_PublicTransportForm);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { TabContent, TabPane } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { AppState, Section } from \"../../state\";\nimport { EmissionCalculator } from \"../../emission-forms\";\nimport { PublicTransportForm } from \"../../emission-forms/containers/PublicTransportForm\";\n\nexport class _SectionFormContainer extends React.Component<any> {\n    render() {\n        const { section } = this.props;\n\n        return (\n            <TabContent activeTab={section}>\n                <TabPane tabId={Section.Housing}>\n                    { section === Section.Housing ? <PublicTransportForm /> : null }\n                </TabPane>\n                <TabPane tabId={Section.WaterAndAirConditioning}>\n                    { section === Section.WaterAndAirConditioning ? <EmissionCalculator /> : null }\n                </TabPane>\n                <TabPane tabId={Section.PrivateTransport}>\n                    { section === Section.PrivateTransport ? <EmissionCalculator /> : null }\n                </TabPane>\n            </TabContent>\n        );\n    }\n}\n\nfunction mapStateToProps({ navigation }: AppState) {\n    return {\n        section: navigation.section\n    };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators({}, dispatch);\n}\n\nexport const SectionFormContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_SectionFormContainer);\n","import classnames from \"classnames\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { AppState, NavigationActions, Section } from \"../../state\";\nimport { Translate } from 'react-i18nify';\n\nconst SECTION_ITEMS = [\n    { section: Section.Housing, label: \"section.housing\" },\n    {\n        section: Section.WaterAndAirConditioning,\n        label: \"section.waterAndAirConditioning\"\n    },\n    { section: Section.PrivateTransport, label: \"section.privateTransport\" },\n    { section: Section.PublicTransport, label: \"section.publicTransport\" },\n    { section: Section.Food, label: \"section.food\" },\n    { section: Section.Consumption, label: \"section.consumption\" }\n    // { section: Section.EmissionResults, label: \"section.emissionResults\" }\n];\n\nexport class _SectionTabs extends React.Component<any> {\n    renderLink({ section, label }) {\n        const { activeSection, setSection } = this.props;\n\n        return (\n            <NavLink\n                className={classnames({\n                    active: section === activeSection\n                })}\n                onClick={() => {\n                    setSection(section);\n                }}\n            >\n                <Translate value={label} />\n            </NavLink>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Nav tabs>\n                    {SECTION_ITEMS.map(item => (\n                        <NavItem key={item.section}>{this.renderLink(item)}</NavItem>\n                    ))}\n                </Nav>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({ navigation }: AppState) {\n    return {\n        activeSection: navigation.section\n    };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators(\n        {\n            setSection: NavigationActions.SetNavigationSection\n        },\n        dispatch\n    );\n}\n\nexport const SectionTabs = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_SectionTabs);\n","import { EmissionResultField } from \"../../emission-calculator\";\n\nexport function chartFieldAttributes(field: EmissionResultField) {\n    const fieldName = `data-${field}`.toLowerCase();\n    const attributes = { [fieldName]: true };\n    return attributes;\n}","import React from \"react\";\nimport { chartFieldAttributes } from \"../util\";\nimport { EmissionResultTotalField, EmissionResultPartialFields } from \"../../emission-calculator\";\n\nexport class EmissionsChart extends React.Component<any> {\n    renderChartSection(field) {\n        const { emission, limit } = this.props;\n\n        const heightPercentage = ((emission[field] || 0) / limit) * 100;\n\n        return (\n            <div\n                className=\"chart-segment w-50\"\n                style={{ height: `${heightPercentage}%`, width: \"100%\" }}\n                {...chartFieldAttributes(field)}\n            />\n        );\n    }\n\n    render() {\n        const { emission, label } = this.props;\n\n        const totalResult = emission[EmissionResultTotalField] || 0;\n\n        return (\n            <div className=\"d-flex flex-column justify-content-end align-items-center\">\n                <small className=\"text-center font-weight-light\">{label}</small>\n                <small className=\"font-weight-bold mb-2\">\n                    {totalResult.toFixed(2)} ton CO<sub>2</sub>\n                </small>\n                {EmissionResultPartialFields.map(field => (\n                    <React.Fragment key={field}>\n                        {this.renderChartSection(field)}\n                    </React.Fragment>\n                ))}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { Translate } from \"react-i18nify\";\nimport { chartFieldAttributes } from \"../util\";\nimport { EmissionResultPartialFields, EmissionResultTotalField } from \"../../emission-calculator\";\n\nexport class EmissionDetails extends React.Component<any> {\n    renderDetailBadge(field) {\n        const value = this.props.emission[field] || 0;\n\n        return (\n            <>\n                <small className=\"pr-2\">\n                    <Translate value={`emissionChart.${field}`} />\n                </small>\n                <small\n                    className=\"d-inline-block text-center\"\n                    style={{\n                        color: \"#000\",\n                        minWidth: \"2.5rem\",\n                        borderRadius: \"0.1rem\"\n                    }}\n                    {...chartFieldAttributes(field)}\n                >\n                    {value.toFixed(2)}\n                </small>\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex flex-column justify-content-start align-items-end\">\n                {EmissionResultPartialFields.map(field => (\n                    <div key={field}>{this.renderDetailBadge(field)}</div>\n                ))}\n                <div className=\"pt-2\">\n                    {this.renderDetailBadge(EmissionResultTotalField)}\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { EmissionsChart } from \"../../emission-chart/components/EmissionsChart\";\nimport { AppState } from \"../../state\";\nimport { EmissionDetails } from \"../components\";\n\nconst REF_EMISSION = {\n    housingConstruction: 0.5,\n    housingHeating: 2.0,\n    warmWater: 1.0,\n    airConditioning: 0.1,\n    fuelForTransport: 1.0,\n    carConstuction: 0.2,\n    publicTransport: 1.0,\n    airTravel: 6.0,\n\n    foodProduction: 3.0,\n    consumption: 1.0,\n    electricity: 0.6,\n    deforestation: 0.2,\n    commonServices: 3.1,\n\n    totalAnnualEmission: 18\n}\n\nclass _EmissionChartContainer extends React.Component<any, any> {\n    render() {\n        const { emissionResult } = this.props;\n        const refEmissions = REF_EMISSION;\n\n        const maxEmission =\n            1.2 * Math.max(refEmissions.totalAnnualEmission, emissionResult.totalAnnualEmission);\n\n        return (\n            <div className=\"d-flex justify-content-around\" style={{ height: 300 }}>\n                <div className=\"pr-3\">\n                    <EmissionDetails emission={emissionResult} />\n                </div>\n                <EmissionsChart\n                    emission={refEmissions}\n                    limit={maxEmission}\n                    label=\"Średnia\"\n                />\n                <EmissionsChart\n                    emission={emissionResult}\n                    limit={maxEmission}\n                    label=\"Twoja emisja\"\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({ emissionResult }: AppState) {\n    return {\n        emissionResult: emissionResult\n    };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators({}, dispatch);\n}\n\nexport const EmissionChartContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_EmissionChartContainer);\n","import React from 'react';\n\nexport class SpritePanel extends React.Component<any> {\n    imageRef = React.createRef<HTMLImageElement>();\n\n    render() {\n        const { file, alt, children } = this.props;\n\n        return (\n            <div className=\"w-100\" style={{ position: 'relative' }}>\n                <img className=\"w-100\" src={\"images/ui/\" + file} alt={alt} ref={this.imageRef} />\n                {!!children ? children : null}\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nexport const Sprite = ({ visible, file, alt, size, left, right, top, bottom }: any) => {\n    if (!visible && typeof visible !== 'undefined') return null;\n\n    const style: any = {\n        position: 'absolute',\n        left: left && left + '%',\n        right: right && right + '%',\n        top: top && top + '%',\n        bottom: bottom && bottom + '%',\n        width: size + '%'\n    };\n\n    return (\n        <img src={`images/ui/${file}`} alt={alt} style={style} />\n    );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { AppState, Section } from \"../../state\";\nimport { SpritePanel, Sprite } from \"../components\";\n\nexport class _SectionVisualisationContainer extends React.Component<any> {\n    renderHousing() {\n        return (\n            <SpritePanel file=\"314.jpg\" alt=\"housing\">\n                <Sprite file=\"48.png\" alt=\"person\" size=\"5\" left=\"20\" bottom=\"5\" />\n                <Sprite file=\"152.png\" alt=\"person\" size=\"11\" right=\"10\" bottom=\"5\" />\n            </SpritePanel>\n        );\n    }\n\n    renderWaterAndAirConditioning() {\n        return (\n            <SpritePanel file=\"111.jpg\" alt=\"water and air conditioning\"></SpritePanel>\n        );\n    }\n\n    renderPublicTransport() {\n        return (\n            <SpritePanel file=\"96.jpg\" alt=\"private transport\"></SpritePanel>\n        );\n    }\n\n    renderPrivateTransport() {\n        const { transport } = this.props.emissionInput;\n\n        return (\n            <SpritePanel file=\"367.jpg\" alt=\"public transport\">\n                <Sprite visible={transport.carKmPerWeek > 0} file=\"381.png\" alt=\"car\" size=\"35\" right=\"10\" bottom=\"5\" />\n            </SpritePanel>\n        );\n    }\n\n    renderFood() {\n        return (\n            <SpritePanel file=\"292.jpg\" alt=\"food\"></SpritePanel>\n        );\n    }\n\n    renderConsumption() {\n        return (\n            <SpritePanel file=\"392.jpg\" alt=\"consumption\"></SpritePanel>\n        );\n    }\n\n    render() {\n        switch (this.props.section) {\n            case Section.Housing:\n                return this.renderHousing();\n            case Section.WaterAndAirConditioning:\n                return this.renderWaterAndAirConditioning();\n            case Section.PublicTransport:\n                return this.renderPublicTransport();\n            case Section.PrivateTransport:\n                return this.renderPrivateTransport();\n            case Section.Food:\n                return this.renderFood();\n            case Section.Consumption:\n                return this.renderConsumption();\n            default:\n                return null;\n        }\n    }\n}\n\nfunction mapStateToProps({ navigation, emissionInput }: AppState) {\n    return {\n        section: navigation.section,\n        emissionInput: emissionInput\n    };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators({}, dispatch);\n}\n\nexport const SectionVisualisationContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_SectionVisualisationContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { EmissionChartContainer } from \"../../emission-chart\";\nimport { AppState } from \"../../state\";\nimport { SectionVisualisationContainer } from \"../../emission-visualisation\";\nimport { CountrySelector } from \"../../emission-forms\";\n\nclass _ResultViewContainer extends React.Component<any, any> {\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12 col-md-6\">\n                    <div className=\"m-4\">\n                        <EmissionChartContainer />\n                    </div>\n                    {/* <hr />\n                    <EmissionAlertBadge /> */}\n                </div>\n                <div className=\"col-12 col-md-6\">\n                    <div className=\"mb-3\">\n                        <CountrySelector />\n                    </div>\n                    <SectionVisualisationContainer />\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState) {\n    return {};\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators({}, dispatch);\n}\n\nexport const ResultViewContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_ResultViewContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { withTranslate } from \"../../i18n\";\nimport { AppState, NavigationActions } from \"../../state\";\n\nconst LOCALES = [\"en\", \"pl\"];\n\nclass _LocaleSwitch extends React.Component<any> {\n    render() {\n        const { t, setLocale } = this.props;\n\n        return (\n            <div className=\"d-flex\">\n                <span>{t(\"locale.selectLanguage\")}</span>\n                {LOCALES.map(locale => (\n                    <span\n                        key={locale}\n                        onClick={() => setLocale(locale)}\n                        className=\"pl-2 pointer\"\n                    >\n                        {t(`locale.${locale}`)}\n                    </span>\n                ))}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState) {\n    return {};\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators(\n        {\n            setLocale: NavigationActions.SetLocale\n        },\n        dispatch\n    );\n}\n\nexport const LocaleSwitch = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslate(_LocaleSwitch));\n","import React from 'react';\nimport { Translate } from 'react-i18nify';\nimport { LocaleSwitch } from '../containers';\n\nexport const NavigationFooter = () => (\n    <footer className=\"footer mt-auto py-3\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md-4\">\n                    <div className=\"text-muted\">\n                        <Translate value=\"application.footerName\" />\n                    </div>\n                </div>\n                <div className=\"col-12 col-md-4\">\n                    <div className=\"text-muted\">\n                        <LocaleSwitch />\n                    </div>\n                </div>\n                <div className=\"col-12 col-md-4 text-md-right\">\n                    <div className=\"text-muted\">\n                        <Translate dangerousHTML value=\"application.footerLink\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </footer>\n);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { I18n } from \"react-i18nify\";\nimport {\n    SectionTabs,\n    SectionFormContainer,\n    ResultViewContainer,\n    NavigationHeader,\n    NavigationFooter\n} from \"./core\";\n\nimport \"./style/style.scss\";\nimport { NavigationActions, AppState } from \"./state\";\nimport { bindActionCreators } from \"redux\";\n\nclass App extends Component<any> {\n    componentWillMount() {\n        this.props.initApp();\n        document.title = I18n.t(\"application.title\");\n    }\n\n    render() {\n        return (\n            <>\n                <NavigationHeader />\n                <main role=\"main\" className=\"container\">\n                    <section className=\"mb-5\">\n                        <ResultViewContainer />\n                    </section>\n                    <section>\n                        <SectionTabs />\n                        <SectionFormContainer />\n                    </section>\n                </main>\n                <NavigationFooter />\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState) {\n    return {};\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators(\n        {\n            initApp: NavigationActions.InitApp\n        },\n        dispatch\n    );\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { LocaleConfig } from './i18n';\nimport { configureStore } from './state';\nimport { Provider } from 'react-redux';\n\nLocaleConfig.configure('pl');\n\nReactDOM.render(<Provider store={configureStore()}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}