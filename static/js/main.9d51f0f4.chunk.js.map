{"version":3,"sources":["emission-calculator/index.ts","emission-calculator/types/result/index.ts","emission-calculator/types/result/emission-result-fields.type.ts","emission-calculator/types/input/index.ts","emission-calculator/constants/emission-calculator.constant.ts","emission-calculator/calculator/partial-emission-results.ts","emission-calculator/calculator/emission-calculator.ts","emission-calculator/calculator/index.ts","shared/components/Logo/logo.svg","shared/components/Logo/Logo.tsx","shared/components/EmissionAlertBadge.tsx","core/components/NavigationHeader.tsx","state/util/action-helpers.util.ts","state/actions/navigation.actions.ts","state/constants/state.interface.ts","state/actions/emission-input.actions.ts","state/actions/emission-result.actions.ts","state/constants/initial-state.constant.ts","state/reducers/index.ts","state/reducers/navigation.reducer.ts","state/reducers/emission-input.reducer.ts","state/reducers/emission-result.reducer.ts","i18n/util/subject.ts","i18n/config.ts","i18n/util/translate.hoc.tsx","state/sagas/navigation.sagas.ts","state/sagas/emission-result.sagas.ts","state/sagas/index.ts","state/index.ts","emission-forms/components/LabelledDropdown.tsx","emission-forms/components/LabelledInput.tsx","emission-forms/components/EmissionFormWrapper.tsx","emission-forms/containers/CountrySelector.tsx","emission-forms/containers/EmissionCalculator.tsx","core/containers/SectionFormContainer.tsx","core/containers/SectionTabs.tsx","emission-chart/util/chart-format.util.ts","emission-chart/components/EmissionsChart.tsx","emission-chart/components/EmissionDetails.tsx","emission-chart/containers/EmissionChartContainer.tsx","emission-visualisation/components/SpritePanel.tsx","emission-visualisation/components/Sprite.tsx","emission-visualisation/containers/SectionVisualisationContainer.tsx","core/containers/ResultViewContainer.tsx","core/containers/LocaleSwitch.tsx","core/components/NavigationFooter.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["_calculator__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_types_input__WEBPACK_IMPORTED_MODULE_1__","o","_types_result__WEBPACK_IMPORTED_MODULE_2__","_emission_result_fields_type__WEBPACK_IMPORTED_MODULE_0__","EmissionResultPartialFields","EmissionResultTotalField","_emission_input_interface__WEBPACK_IMPORTED_MODULE_0__","FoodEmissionParams","TransportEmissionParams","PartialEmissionResult","housingConstruction","input","housingHeating","warmWater","airConditioning","fuelForTransport","_ref","transport","carKmPerWeek","carConstuction","publicTransport","airTravel","_ref2","annualHoursInAir","foodProduction","_ref3","food","meatPerWeek","consumption","electricity","deforestation","commonServices","totalAnnualEmission","undefined","calculateEmissionResults","partialResultCalculatorMap","partialResults","reduce","result","key","fn","value","Object","objectSpread","defineProperty","getPartialResults","sum","calculateEmissionResultsWithPartials","module","exports","p","Logo","react_default","a","createElement","src","logo","className","alt","EmissionAlertBadge","reactstrap_es","color","build","NavigationHeader","Logo_Logo","createAction","type","payload","Section","SetNavigationSectionType","SetNavigationSection","section","DetermineNavigationSectionType","DetermineNavigationSection","SetLocaleType","SetLocale","locale","SetCountryCodeType","SetCountryCode","countryCode","UpdatePublicTransportType","UpdatePublicTransport","UpdateFoodType","UpdateFood","CalculateEmissionResultsType","CalculateEmissionResults","SetEmissionsResultType","SetEmissionsResult","emissions","InitialAppState","navigation","Housing","emissionInput","country","emissionResult","RootReducer","combineReducers","state","arguments","length","action","NavigationActions","EmissionInputActions","EmissionResultActions","Subject","classCallCheck","this","handlers","createClass","param","forEach","handler","_this","toConsumableArray","concat","filter","h","LocaleConfig","localeSubject","en","require","pl","I18n","setTranslations","setLocale","next","subscribe","tFn","t","bind","lFn","l","logOnNavigateSaga","regenerator_default","mark","wrap","_context","prev","put","stop","setLocaleSaga","_context2","changeLocale","NavigationSagas","takeEvery","calculateEmissionResultSaga","select","sent","call","EmissionResultSagas","RootSaga","all","_marked","composeEnhancers","window","compose","LabelledDropdown","_React$Component","props","possibleConstructorReturn","getPrototypeOf","isOpen","toggleDropdown","assertThisInitialized","inherits","event","setState","prevState","_this$props","valueChange","options","currentLabel","find","option","toggle","caret","label","map","onClick","React","Component","LabelledInput","apply","addon","placeholder","addonType","onChange","currentTarget","EmissionFormWrapper","title","footer","children","OPTIONS","_CountrySelector","LabelledDropdown_LabelledDropdown","CountrySelector","connect","dispatch","bindActionCreators","_EmissionCalculator","Fragment","LabelledInput_LabelledInput","_this$props2","EmissionFormWrapper_EmissionFormWrapper","renderSectionA","renderSectionB","EmissionCalculator","_SectionFormContainer","activeTab","tabId","WaterAndAirConditioning","PrivateTransport","SectionFormContainer","SECTION_ITEMS","PublicTransport","Food","Consumption","_SectionTabs","activeSection","setSection","classnames","active","tabs","item","renderLink","SectionTabs","chartFieldAttributes","field","fieldName","toLowerCase","EmissionsChart","emission","limit","heightPercentage","assign","style","height","width","totalResult","toFixed","renderChartSection","EmissionDetails","minWidth","borderRadius","renderDetailBadge","REF_EMISSION","_EmissionChartContainer","refEmissions","maxEmission","Math","max","EmissionDetails_EmissionDetails","EmissionsChart_EmissionsChart","EmissionChartContainer","SpritePanel","_getPrototypeOf2","_len","args","Array","_key","imageRef","createRef","file","position","ref","Sprite","visible","size","left","right","top","bottom","_SectionVisualisationContainer","SpritePanel_SpritePanel","Sprite_Sprite","renderHousing","renderWaterAndAirConditioning","renderPublicTransport","renderPrivateTransport","renderFood","renderConsumption","SectionVisualisationContainer","_ResultViewContainer","EmissionAlertBadge_EmissionAlertBadge","ResultViewContainer","LOCALES","_LocaleSwitch","LocaleSwitch","WithTranslate","sub","subscribeToChangeLocale","forceUpdate","NavigationFooter","dangerousHTML","App","document","NavigationHeader_NavigationHeader","role","NavigationFooter_NavigationFooter","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","configure","ReactDOM","render","es","store","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSagaTask","sagaTask","run","configureStore","src_App","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d51f0f4.chunk.js","sourcesContent":["export { calculateEmissionResults } from './calculator';\r\nexport * from './types/input';\r\nexport * from './types/result'\r\n","export * from './emission-result-fields.type';\r\nexport * from './emission-result.interface';\r\n","import { EmissionResultField } from \"./emission-result.interface\";\n\nexport const EmissionResultPartialFields: EmissionResultField[] = [\n    'housingConstruction',\n    'housingHeating',\n    'warmWater',\n    'airConditioning',\n    'fuelForTransport',\n    'carConstuction',\n    'publicTransport',\n    'airTravel',\n    'foodProduction',\n    'consumption',\n    'electricity',\n    'deforestation',\n    'commonServices'\n];\n\nexport const EmissionResultTotalField: EmissionResultField = 'totalAnnualEmission';","export * from './emission-input.interface';\r\n","export const WeeksPerYear = 52;\n\nexport const FoodEmissionParams = {\n    perMeatDailyMeatConsumption: 2,\n};\n\nexport const TransportEmissionParams = {\n    perKmOfCarTravel: 0.001,\n    perAnnualHourInAir: 0.3\n};","import { EmissionInput } from \"../types/input\";\nimport { EmissionResultField } from \"../types/result\";\nimport { FoodEmissionParams, WeeksPerYear, TransportEmissionParams } from \"../constants\";\n\nexport type PartialResultCalculatorMap = {\n    [key in EmissionResultField]: (input: EmissionInput) => number;\n};\n\nexport const PartialEmissionResult: PartialResultCalculatorMap = {\n    housingConstruction: (input) => {\n        return 0.2;\n    },\n    housingHeating: (input) => {\n        return 0.5;\n    },\n    warmWater: (input) => {\n        return 1.25;\n    },\n    airConditioning: (input) => {\n        return 0.12;\n    },\n    fuelForTransport: ({ transport }) => {\n        return transport.carKmPerWeek * WeeksPerYear * TransportEmissionParams.perKmOfCarTravel;\n    },\n    carConstuction: (input) => {\n        return 0.9;\n    },\n    publicTransport: (input) => {\n        return 1.2;\n    },\n    airTravel: ({ transport }) => {\n        return transport.annualHoursInAir * TransportEmissionParams.perAnnualHourInAir;\n    },\n\n    foodProduction: ({ food }) => {\n        return food.meatPerWeek * FoodEmissionParams.perMeatDailyMeatConsumption;\n    },\n    consumption: (input) => {\n        return 2.6;\n    },\n    electricity: (input) => {\n        return 1.1;\n    },\n    deforestation: (input) => {\n        return 0.5;\n    },\n    commonServices: (input) => {\n        return 3.5;\n    },\n\n    totalAnnualEmission: undefined\n};","import { EmissionInput } from \"../types/input\";\nimport { EmissionResult, EmissionResultPartialFields } from \"../types/result\";\nimport { PartialResultCalculatorMap, PartialEmissionResult } from \"./partial-emission-results\";\n\nexport function calculateEmissionResults(input: EmissionInput): EmissionResult {\n    return calculateEmissionResultsWithPartials(input, PartialEmissionResult);\n}\n\nexport function calculateEmissionResultsWithPartials(input: EmissionInput, partialResultCalculatorMap: PartialResultCalculatorMap) {\n    const partialResults = getPartialResults(input, partialResultCalculatorMap);\n\n    const totalAnnualEmission = getTotalResult(partialResults);\n    \n    const resultWithTotal = { ...partialResults, totalAnnualEmission };\n\n    return resultWithTotal;\n}\n\nexport function getPartialResults(input: EmissionInput, partialResultCalculatorMap: PartialResultCalculatorMap): EmissionResult {\n    return EmissionResultPartialFields.reduce((result, key) => {\n        const fn = partialResultCalculatorMap[key];\n        const value = fn ? fn(input) : 0;\n        return { ...result, [key]: value };\n    }, {}) as EmissionResult;\n}\n\nexport function getTotalResult(result: EmissionResult): number {\n    return EmissionResultPartialFields.reduce((sum, key) => sum + (result[key] || 0), 0);\n}","export * from './emission-calculator';\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './logo.scss';\n\nexport const Logo = () => <img src={logo} className=\"App-logo\" alt=\"logo\" />;","import React from 'react';\nimport { Translate } from 'react-i18nify';\nimport { Alert } from 'reactstrap';\n\nexport const EmissionAlertBadge = () => (\n    <Alert color=\"warning\">\n        <Translate value=\"emissions.yourEmissionsAreTooHigh\" />\n    </Alert>\n);\n","import React from 'react';\nimport { Translate } from 'react-i18nify';\nimport { Logo } from '../../shared';\n\nexport const NavigationHeader = () => (\n    <header>\n        <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n            <span className=\"navbar-brand\">\n                <Logo />\n                <Translate value=\"application.title\" />\n            </span>\n        </nav>\n    </header>\n);","export interface TypedAction<T, P> {\n    readonly type: T;\n    readonly payload?: P;\n}\n\nexport function createAction<T extends string, P>(type: T, payload?: P): TypedAction<T, P> {\n    return { type, payload };\n}","import { createAction } from '../util';\nimport { Section } from '../constants';\n\nexport type ActionsTypes = SetNavigationSectionAction | DetermineNavigationSectionAction;\n\nexport const SetNavigationSectionType = '[NAVIGATION] SetNavigationSection';\nexport type SetNavigationSectionAction = ReturnType<typeof SetNavigationSection>;\nexport const SetNavigationSection = (section: Section) => createAction(SetNavigationSectionType, section);\n\nexport const DetermineNavigationSectionType = '[NAVIGATION] DetermineNavigationSection';\nexport type DetermineNavigationSectionAction = ReturnType<typeof DetermineNavigationSection>;\nexport const DetermineNavigationSection = () => createAction(DetermineNavigationSectionType);\n\nexport const SetLocaleType = '[NAVIGATION] SetLocale';\nexport type SetLocaleAction = ReturnType<typeof SetLocale>;\nexport const SetLocale = (locale: string) => createAction(SetLocaleType, locale);","import { EmissionInput, EmissionResult } from \"../../emission-calculator\";\n\nexport enum Section {\n    Country = 'COUNTRY',\n    Housing = 'HOUSING',\n    WaterAndAirConditioning = 'WATER_AND_AIR_CONDITIONING',\n    PrivateTransport = 'PRIVATE_TRANSPORT',\n    PublicTransport = 'PUBLIC_TRANSPORT',\n    Food = 'FOOD',\n    Consumption = 'CONSUMPTION',\n    EmissionResults = 'EMISSION_RESULTS'\n}\n\nexport interface NavigationState {\n    section: Section;\n}\n\nexport type EmissionInputState = EmissionInput;\nexport type EmissionResultState = EmissionResult;\n\nexport interface AppState {\n    navigation: NavigationState;\n    emissionInput: EmissionInputState;\n    emissionResult: EmissionResultState;\n}","import { createAction } from '../util';\nimport { EmissionInputTransport, EmissionInputFood } from '../../emission-calculator';\n\nexport type ActionsTypes = SetCountryCodeAction | UpdatePublicTransportAction | UpdateFoodAction;\n\nexport const SetCountryCodeType = '[FOSSIL_USAGE] SetCountryCode';\nexport type SetCountryCodeAction = ReturnType<typeof SetCountryCode>;\nexport const SetCountryCode = (countryCode: string) => createAction(SetCountryCodeType, countryCode);\n\nexport const UpdatePublicTransportType = '[FOSSIL_USAGE] UpdatePublicTransport';\nexport type UpdatePublicTransportAction = ReturnType<typeof UpdatePublicTransport>;\nexport const UpdatePublicTransport = (transport: EmissionInputTransport) => createAction(UpdatePublicTransportType, transport);\n\nexport const UpdateFoodType = '[FOSSIL_USAGE] UpdateFood';\nexport type UpdateFoodAction = ReturnType<typeof UpdateFood>;\nexport const UpdateFood = (food: EmissionInputFood) => createAction(UpdateFoodType, food);","import { createAction } from '../util';\nimport { EmissionResultState } from '../constants';\n\nexport type ActionsTypes = CalculateEmissionResultsAction | SetEmissionsResultAction;\n\nexport const CalculateEmissionResultsType = '[EMISSION_RESULT] CalculateEmissionResults';\nexport type CalculateEmissionResultsAction = ReturnType<typeof CalculateEmissionResults>;\nexport const CalculateEmissionResults = () => createAction(CalculateEmissionResultsType);\n\nexport const SetEmissionsResultType = '[EMISSION_RESULT] SetEmissionsResult';\nexport type SetEmissionsResultAction = ReturnType<typeof SetEmissionsResult>;\nexport const SetEmissionsResult = (emissions: EmissionResultState) => createAction(SetEmissionsResultType, emissions);","import { AppState, Section } from \"./state.interface\";\n\nexport const InitialAppState: AppState = {\n    navigation: {\n        section: Section.Housing\n    },\n    emissionInput: {\n        country: {\n            countryCode: 'pl'\n        },\n        transport: {\n            carKmPerWeek: null,\n            annualHoursInAir: null\n        },\n        food: {\n            meatPerWeek: 1\n        }\n    },\n    emissionResult: {\n        housingConstruction: 0,\n        housingHeating: 0,\n        warmWater: 0,\n        airConditioning: 0,\n        fuelForTransport: 0,\n        carConstuction: 0,\n        publicTransport: 0,\n        airTravel: 0,\n        foodProduction: 0,\n        consumption: 0,\n        electricity: 0,\n        deforestation: 0,\n        commonServices: 0,\n        totalAnnualEmission: 0\n    }\n}","import { combineReducers } from 'redux';\nimport { NavigationReducer } from './navigation.reducer';\nimport { emissionInputReducer } from './emission-input.reducer';\nimport { emissionResultReducer } from './emission-result.reducer';\n\nexport const RootReducer = combineReducers({\n    navigation: NavigationReducer,\n    emissionInput: emissionInputReducer,\n    emissionResult: emissionResultReducer\n});","import { NavigationActions } from '../actions';\nimport { InitialAppState, NavigationState } from '../constants';\n\nexport const NavigationReducer = (state: NavigationState = InitialAppState.navigation, action: NavigationActions.ActionsTypes): NavigationState => {\n    switch (action.type) {\n        case NavigationActions.SetNavigationSectionType:\n            return { ...state, section: action.payload };\n        default:\n            return state;\n    }\n};","import { EmissionInputActions } from '../actions';\nimport { InitialAppState, EmissionInputState } from '../constants';\n\nexport const emissionInputReducer = (state: EmissionInputState = InitialAppState.emissionInput, action: EmissionInputActions.ActionsTypes): EmissionInputState => {\n    switch (action.type) {\n        case EmissionInputActions.UpdatePublicTransportType:\n            return { ...state, transport: { ...state.transport, ...action.payload } };\n        case EmissionInputActions.UpdateFoodType:\n            return { ...state, food: { ...state.food, ...action.payload } };\n        case EmissionInputActions.SetCountryCodeType:\n            return { ...state, country: { ...state.country, countryCode: action.payload } };\n        default:\n            return state;\n    }\n};","import { EmissionResultActions } from '../actions';\nimport { InitialAppState, EmissionResultState } from '../constants';\n\nexport const emissionResultReducer = (state: EmissionResultState = InitialAppState.emissionResult, action: EmissionResultActions.ActionsTypes): EmissionResultState => {\n    switch (action.type) {\n        case EmissionResultActions.SetEmissionsResultType:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};","interface Handler<P> {\n    (p: P): void;\n}\n\nexport class Subject<P> {\n    private handlers: Handler<P>[] = [];\n\n    next(param: P) {\n        this.handlers.forEach(handler => handler(param));\n    }\n\n    subscribe(handler: Handler<P>): Function {\n        this.handlers = [...this.handlers, handler];\n        return () => {\n            this.handlers = this.handlers.filter(h => h !== handler);\n        };\n    }\n}\n","import { I18n } from 'react-i18nify';\nimport { Subject } from './util/subject';\n\nclass LocaleConfigClass {\n    private localeSubject = new Subject<string>();\n\n    configure(locale: string) {\n        const en = require('./languages/en.json');\n        const pl = require('./languages/pl.json');\n    \n        I18n.setTranslations({ en, pl });\n    \n        I18n.setLocale(locale);\n    }\n\n    changeLocale(locale: string) {\n        I18n.setLocale(locale);\n        this.localeSubject.next(locale);\n    }\n\n    subscribeToChangeLocale(handler: (locale: string) => void): Function {\n        return this.localeSubject.subscribe(handler);\n    }\n};\n\nexport const LocaleConfig = new LocaleConfigClass();","import React from \"react\";\nimport { I18n } from \"react-i18nify\";\nimport { LocaleConfig } from \"../config\";\n\nconst tFn = I18n.t.bind(I18n);\nconst lFn = I18n.l.bind(I18n);\n\nexport interface InjectedTranslateProps {\n    t: Function;\n    l: Function;\n}\n\nexport function withTranslate<P>(\n    Component: React.ComponentType<P>\n) {\n    return class WithTranslate extends React.Component<P> {\n        private sub: Function;\n\n        componentWillMount() {\n            this.sub = LocaleConfig.subscribeToChangeLocale(() => {\n                this.forceUpdate();\n            });\n        }\n\n        componentWillUnmount() {\n            this.sub && this.sub();\n        }\n\n        render() {\n            return <Component {...this.props} t={tFn} l={lFn} />;\n        }\n    };\n}\n","import { takeEvery, put } from 'redux-saga/effects';\nimport { NavigationActions } from '../actions';\nimport { LocaleConfig } from '../../i18n';\n\nexport const logOnNavigateSaga = function* (action: NavigationActions.SetNavigationSectionAction) {\n    yield put(NavigationActions.DetermineNavigationSection());\n};\n\nexport const setLocaleSaga = function*(action: NavigationActions.SetLocaleAction) {\n    LocaleConfig.changeLocale(action.payload);\n}\n\nexport const NavigationSagas = [\n    takeEvery(NavigationActions.SetNavigationSectionType, logOnNavigateSaga),\n    takeEvery(NavigationActions.SetLocaleType, setLocaleSaga)\n];","import { takeEvery, put, select, call } from 'redux-saga/effects';\nimport { EmissionResultActions, EmissionInputActions } from '../actions';\nimport { AppState } from '../constants';\nimport { calculateEmissionResults } from '../../emission-calculator';\n\nexport const calculateEmissionResultSaga = function* () {\n    const emissionInput = yield select<AppState>(state => state.emissionInput);\n\n    const emissionResult = yield call(calculateEmissionResults, emissionInput);\n\n    yield put(EmissionResultActions.SetEmissionsResult(emissionResult));\n};\n\nexport const EmissionResultSagas = [\n    takeEvery([\n        EmissionInputActions.UpdatePublicTransportType,\n        EmissionInputActions.UpdateFoodType\n    ], calculateEmissionResultSaga)\n];","import { all } from 'redux-saga/effects';\nimport { NavigationSagas } from './navigation.sagas';\nimport { EmissionResultSagas } from './emission-result.sagas';\n\nexport function* RootSaga() {\n    yield all([\n        ...NavigationSagas,\n        ...EmissionResultSagas\n    ]);\n}","export * from './actions';\nexport * from './constants';\n\nimport { applyMiddleware, compose, createStore, Store } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { AppState, InitialAppState } from './constants';\nimport { RootReducer } from './reducers';\nimport { RootSaga } from './sagas';\n\nconst composeEnhancers = (window as any)['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] || compose;\n\nexport const configureStore = (initialState: AppState = InitialAppState): Store<AppState> => {\n    const sagaMiddleware = createSagaMiddleware();\n\n    const store: any = createStore(RootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\n    store.runSagaTask = () => (store.sagaTask = sagaMiddleware.run(RootSaga as any));\n\n    store.runSagaTask();\n\n    return store;\n};","import React from 'react';\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\n\ntype Option = { value: any, label: string };\n\ninterface Props {\n    value: any;\n    valueChange: (value: any) => any;\n    options: Option[];\n}\n\nexport class LabelledDropdown extends React.Component<Props, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = { isOpen: false };\n\n        this.toggleDropdown = this.toggleDropdown.bind(this);\n    }\n\n    toggleDropdown(event: Event) {\n        this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n    }\n\n    render() {\n        const { value, valueChange, options } = this.props;\n\n        const currentLabel = options.find(option => option.value === value);\n\n        return (\n            <Dropdown isOpen={this.state.isOpen} toggle={this.toggleDropdown}>\n                <DropdownToggle caret>\n                    { currentLabel ? currentLabel.label : value }\n                </DropdownToggle>\n                <DropdownMenu>\n                    {\n                        options.map(option => (\n                            <DropdownItem key={option.value} onClick={() => valueChange(option.value)}>\n                                { option.label }\n                            </DropdownItem>\n                        ))\n                    }\n                </DropdownMenu>\n            </Dropdown>\n        );\n    }\n}","import React from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\n\ninterface Props {\n    addon?: string;\n    placeholder?: string;\n    value: any;\n    valueChange: (value: any) => any;\n}\n\nexport class LabelledInput extends React.Component<Props> {\n    render() {\n        const { value, valueChange, addon, placeholder } = this.props;\n\n        return (\n            <InputGroup>\n                {addon ? (\n                    <InputGroupAddon addonType=\"prepend\">\n                        {addon}\n                    </InputGroupAddon>\n                ) : null}\n                <Input\n                    placeholder={placeholder}\n                    type=\"number\"\n                    value={value || ''}\n                    onChange={event => valueChange(event.currentTarget.value)}\n                />\n            </InputGroup>\n        );\n    }\n}\n","import React from \"react\";\nimport { Translate } from \"react-i18nify\";\nimport { Card, CardBody, CardFooter, CardHeader } from \"reactstrap\";\n\nexport const EmissionFormWrapper = ({ title, footer, children }: any) => (\n    <Card>\n        <CardHeader>\n            <Translate className=\"font-weight-light\" value={title} />\n        </CardHeader>\n        <CardBody>{children}</CardBody>\n        <CardFooter>\n            <div className=\"font-weight-light d-flex justify-content-between\">\n                {footer ? <Translate value={footer} /> : null}\n            </div>\n        </CardFooter>\n    </Card>\n);\n","import React from 'react';\nimport { Translate } from 'react-i18nify';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { AppState, EmissionInputActions } from '../../state';\nimport { LabelledDropdown } from '../components';\n\nconst OPTIONS = [\n    { value: 'pl', label: 'Polska' },\n    { value: 'gb', label: 'Wielka Brytania' },\n    { value: 'us', label: 'Stany Zjednoczone' },\n    { value: 'de', label: 'Niemcy' }\n];\n\nclass _CountrySelector extends React.Component<any> {\n    render() {\n        const { countryCode, SetCountryCode } = this.props;\n\n        return (\n            <div>\n                <Translate className=\"font-weight-light\" value=\"country.selectCountry\" />\n                <LabelledDropdown \n                    value={countryCode}\n                    valueChange={value => SetCountryCode(value)}\n                    options={OPTIONS}>\n                </LabelledDropdown>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({ emissionInput }: AppState) {\n    return {\n        countryCode: emissionInput.country.countryCode\n    };\n};\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators(\n        {\n            SetCountryCode: EmissionInputActions.SetCountryCode\n        },\n        dispatch\n    );\n}\n\nexport const CountrySelector = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_CountrySelector);","import React from 'react';\nimport { Translate } from 'react-i18nify';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { AppState, EmissionInputActions } from '../../state';\nimport { EmissionFormWrapper, LabelledDropdown, LabelledInput } from '../components';\nimport { CountrySelector } from './CountrySelector';\n\nclass _EmissionCalculator extends React.Component<any> {\n    renderSectionA() {\n        const { transport, UpdatePublicTransport } = this.props;\n\n        return (\n            <>\n                <h4 className=\"font-weight-light\">Transport:</h4>\n                <div>\n                    <Translate className=\"font-weight-light\" value=\"transport.enterWeeklyCarUsage\" />\n                    <div className=\"w-50\">\n                        <LabelledInput\n                            addon=\"km\"\n                            placeholder=\"Ile km podróżujesz samochodem tygodniowo?\"\n                            value={transport.carKmPerWeek}\n                            valueChange={value => UpdatePublicTransport({ carKmPerWeek: value })}>\n                        </LabelledInput>\n                    </div>\n                </div>\n                <div className=\"pt-3\">\n                    <Translate className=\"font-weight-light\" value=\"transport.enterAnnualPlaneHours\" />\n                    <div className=\"w-50\">\n                        <LabelledInput\n                            addon=\"godziny\"\n                            placeholder=\"Ile godzin spędzasz rocznie w podróży samolotem?\"\n                            value={transport.annualHoursInAir}\n                            valueChange={value => UpdatePublicTransport({ annualHoursInAir: value })}>\n                        </LabelledInput>\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n\n    renderSectionB() {\n        const { food, UpdateFood } = this.props;\n\n        const options = [\n            { value: 0, label: 'Jestem wegetarianinem/-ką' },\n            { value: 1, label: 'Raz w tygodniu' },\n            { value: 2, label: 'Dość rzadko' },\n            { value: 7, label: 'Codziennie' }\n        ];\n\n        return (\n            <>\n                <h4 className=\"font-weight-light\">Żywność:</h4>\n                <div>\n                    <Translate className=\"font-weight-light\" value=\"food.howOftenDoYouConsumeFood\" />\n                    <LabelledDropdown \n                        value={food.meatPerWeek}\n                        valueChange={value => UpdateFood({ meatPerWeek: value })}\n                        options={options}>\n                    </LabelledDropdown>\n                </div>\n                <div className=\"pt-3\">\n                    <CountrySelector />\n                </div>\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <EmissionFormWrapper title=\"Housing\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        {this.renderSectionA()}\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        {this.renderSectionB()}\n                    </div>\n                </div>\n            </EmissionFormWrapper>\n        );\n    }\n}\n\nfunction mapStateToProps({ emissionInput }: AppState) {\n    return {\n        transport: emissionInput.transport,\n        food: emissionInput.food\n    };\n};\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators(\n        {\n            UpdatePublicTransport: EmissionInputActions.UpdatePublicTransport,\n            UpdateFood: EmissionInputActions.UpdateFood\n        },\n        dispatch\n    );\n}\n\nexport const EmissionCalculator = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_EmissionCalculator);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { TabContent, TabPane } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { AppState, Section } from \"../../state\";\nimport { EmissionCalculator } from \"../../emission-forms\";\n\nexport class _SectionFormContainer extends React.Component<any> {\n    render() {\n        const { section } = this.props;\n\n        return (\n            <TabContent activeTab={section}>\n                <TabPane tabId={Section.Housing}>\n                    { section === Section.Housing ? <EmissionCalculator /> : null }\n                </TabPane>\n                <TabPane tabId={Section.WaterAndAirConditioning}>\n                    { section === Section.WaterAndAirConditioning ? <EmissionCalculator /> : null }\n                </TabPane>\n                <TabPane tabId={Section.PrivateTransport}>\n                    { section === Section.PrivateTransport ? <EmissionCalculator /> : null }\n                </TabPane>\n            </TabContent>\n        );\n    }\n}\n\nfunction mapStateToProps({ navigation }: AppState) {\n    return {\n        section: navigation.section\n    };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators({}, dispatch);\n}\n\nexport const SectionFormContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_SectionFormContainer);\n","import classnames from \"classnames\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { AppState, NavigationActions, Section } from \"../../state\";\nimport { Translate } from 'react-i18nify';\n\nconst SECTION_ITEMS = [\n    { section: Section.Housing, label: \"section.housing\" },\n    {\n        section: Section.WaterAndAirConditioning,\n        label: \"section.waterAndAirConditioning\"\n    },\n    { section: Section.PrivateTransport, label: \"section.privateTransport\" },\n    { section: Section.PublicTransport, label: \"section.publicTransport\" },\n    { section: Section.Food, label: \"section.food\" },\n    { section: Section.Consumption, label: \"section.consumption\" }\n    // { section: Section.EmissionResults, label: \"section.emissionResults\" }\n];\n\nexport class _SectionTabs extends React.Component<any> {\n    renderLink({ section, label }) {\n        const { activeSection, setSection } = this.props;\n\n        return (\n            <NavLink\n                className={classnames({\n                    active: section === activeSection\n                })}\n                onClick={() => {\n                    setSection(section);\n                }}\n            >\n                <Translate value={label} />\n            </NavLink>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Nav tabs>\n                    {SECTION_ITEMS.map(item => (\n                        <NavItem key={item.section}>{this.renderLink(item)}</NavItem>\n                    ))}\n                </Nav>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({ navigation }: AppState) {\n    return {\n        activeSection: navigation.section\n    };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators(\n        {\n            setSection: NavigationActions.SetNavigationSection\n        },\n        dispatch\n    );\n}\n\nexport const SectionTabs = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_SectionTabs);\n","import { EmissionResultField } from \"../../emission-calculator\";\n\nexport function chartFieldAttributes(field: EmissionResultField) {\n    const fieldName = `data-${field}`.toLowerCase();\n    const attributes = { [fieldName]: true };\n    return attributes;\n}","import React from \"react\";\nimport { chartFieldAttributes } from \"../util\";\nimport { EmissionResultTotalField, EmissionResultPartialFields } from \"../../emission-calculator\";\n\nexport class EmissionsChart extends React.Component<any> {\n    renderChartSection(field) {\n        const { emission, limit } = this.props;\n\n        const heightPercentage = ((emission[field] || 0) / limit) * 100;\n\n        return (\n            <div\n                className=\"chart-segment w-50\"\n                style={{ height: `${heightPercentage}%`, width: \"100%\" }}\n                {...chartFieldAttributes(field)}\n            />\n        );\n    }\n\n    render() {\n        const { emission, label } = this.props;\n\n        const totalResult = emission[EmissionResultTotalField] || 0;\n\n        return (\n            <div className=\"d-flex flex-column justify-content-end align-items-center\">\n                <small className=\"text-center font-weight-light\">{label}</small>\n                <small className=\"font-weight-bold mb-2\">\n                    {totalResult.toFixed(2)} ton CO<sub>2</sub>\n                </small>\n                {EmissionResultPartialFields.map(field => (\n                    <React.Fragment key={field}>\n                        {this.renderChartSection(field)}\n                    </React.Fragment>\n                ))}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { Translate } from \"react-i18nify\";\nimport { chartFieldAttributes } from \"../util\";\nimport { EmissionResultPartialFields, EmissionResultTotalField } from \"../../emission-calculator\";\n\nexport class EmissionDetails extends React.Component<any> {\n    renderDetailBadge(field) {\n        const value = this.props.emission[field] || 0;\n\n        return (\n            <>\n                <small className=\"pr-2\">\n                    <Translate value={`emissionChart.${field}`} />\n                </small>\n                <small\n                    className=\"d-inline-block text-center\"\n                    style={{\n                        color: \"#000\",\n                        minWidth: \"2.5rem\",\n                        borderRadius: \"0.1rem\"\n                    }}\n                    {...chartFieldAttributes(field)}\n                >\n                    {value.toFixed(2)}\n                </small>\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex flex-column justify-content-start align-items-end\">\n                {EmissionResultPartialFields.map(field => (\n                    <div key={field}>{this.renderDetailBadge(field)}</div>\n                ))}\n                <div className=\"pt-2\">\n                    {this.renderDetailBadge(EmissionResultTotalField)}\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { EmissionsChart } from \"../../emission-chart/components/EmissionsChart\";\nimport { AppState } from \"../../state\";\nimport { EmissionDetails } from \"../components\";\n\nconst REF_EMISSION = {\n    housingConstruction: 0.5,\n    housingHeating: 2.0,\n    warmWater: 1.0,\n    airConditioning: 0.1,\n    fuelForTransport: 1.0,\n    carConstuction: 0.2,\n    publicTransport: 1.0,\n    airTravel: 6.0,\n\n    foodProduction: 3.0,\n    consumption: 1.0,\n    electricity: 0.6,\n    deforestation: 0.2,\n    commonServices: 3.1,\n\n    totalAnnualEmission: 18\n}\n\nclass _EmissionChartContainer extends React.Component<any, any> {\n    render() {\n        const { emissionResult } = this.props;\n        const refEmissions = REF_EMISSION;\n\n        const maxEmission =\n            1.2 * Math.max(refEmissions.totalAnnualEmission, emissionResult.totalAnnualEmission);\n\n        return (\n            <div className=\"d-flex justify-content-around\" style={{ height: 300 }}>\n                <div className=\"pr-3\">\n                    <EmissionDetails emission={emissionResult} />\n                </div>\n                <EmissionsChart\n                    emission={refEmissions}\n                    limit={maxEmission}\n                    label=\"Średnia\"\n                />\n                <EmissionsChart\n                    emission={emissionResult}\n                    limit={maxEmission}\n                    label=\"Twoja emisja\"\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({ emissionResult }: AppState) {\n    return {\n        emissionResult: emissionResult\n    };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators({}, dispatch);\n}\n\nexport const EmissionChartContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_EmissionChartContainer);\n","import React from 'react';\n\nexport class SpritePanel extends React.Component<any> {\n    imageRef = React.createRef<HTMLImageElement>();\n\n    render() {\n        const { file, alt, children } = this.props;\n\n        return (\n            <div className=\"w-100\" style={{ position: 'relative' }}>\n                <img className=\"w-100\" src={\"images/ui/\" + file} alt={alt} ref={this.imageRef} />\n                {!!children ? children : null}\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nexport const Sprite = ({ visible, file, alt, size, left, right, top, bottom }: any) => {\n    if (!visible && typeof visible !== 'undefined') return null;\n\n    const style: any = {\n        position: 'absolute',\n        left: left && left + '%',\n        right: right && right + '%',\n        top: top && top + '%',\n        bottom: bottom && bottom + '%',\n        width: size + '%'\n    };\n\n    return (\n        <img src={`images/ui/${file}`} alt={alt} style={style} />\n    );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { AppState, Section } from \"../../state\";\nimport { SpritePanel, Sprite } from \"../components\";\n\nexport class _SectionVisualisationContainer extends React.Component<any> {\n    renderHousing() {\n        return (\n            <SpritePanel file=\"314.jpg\" alt=\"housing\">\n                <Sprite file=\"48.png\" alt=\"person\" size=\"5\" left=\"20\" bottom=\"5\" />\n                <Sprite file=\"152.png\" alt=\"person\" size=\"11\" right=\"10\" bottom=\"5\" />\n            </SpritePanel>\n        );\n    }\n\n    renderWaterAndAirConditioning() {\n        return (\n            <SpritePanel file=\"111.jpg\" alt=\"water and air conditioning\"></SpritePanel>\n        );\n    }\n\n    renderPublicTransport() {\n        return (\n            <SpritePanel file=\"96.jpg\" alt=\"private transport\"></SpritePanel>\n        );\n    }\n\n    renderPrivateTransport() {\n        const { transport } = this.props.emissionInput;\n\n        return (\n            <SpritePanel file=\"367.jpg\" alt=\"public transport\">\n                <Sprite visible={transport.carKmPerWeek > 0} file=\"381.png\" alt=\"car\" size=\"35\" right=\"10\" bottom=\"5\" />\n            </SpritePanel>\n        );\n    }\n\n    renderFood() {\n        return (\n            <SpritePanel file=\"292.jpg\" alt=\"food\"></SpritePanel>\n        );\n    }\n\n    renderConsumption() {\n        return (\n            <SpritePanel file=\"392.jpg\" alt=\"consumption\"></SpritePanel>\n        );\n    }\n\n    render() {\n        switch (this.props.section) {\n            case Section.Housing:\n                return this.renderHousing();\n            case Section.WaterAndAirConditioning:\n                return this.renderWaterAndAirConditioning();\n            case Section.PublicTransport:\n                return this.renderPublicTransport();\n            case Section.PrivateTransport:\n                return this.renderPrivateTransport();\n            case Section.Food:\n                return this.renderFood();\n            case Section.Consumption:\n                return this.renderConsumption();\n            default:\n                return null;\n        }\n    }\n}\n\nfunction mapStateToProps({ navigation, emissionInput }: AppState) {\n    return {\n        section: navigation.section,\n        emissionInput: emissionInput\n    };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators({}, dispatch);\n}\n\nexport const SectionVisualisationContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_SectionVisualisationContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { EmissionChartContainer } from \"../../emission-chart\";\nimport { EmissionAlertBadge } from \"../../shared/components/EmissionAlertBadge\";\nimport { AppState } from \"../../state\";\nimport { SectionVisualisationContainer } from \"../../emission-visualisation\";\n\nclass _ResultViewContainer extends React.Component<any, any> {\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12 col-md-6\">\n                    <div className=\"m-4\">\n                        <EmissionChartContainer />\n                    </div>\n                    <hr />\n                    <EmissionAlertBadge />\n                </div>\n                <div className=\"col-12 col-md-6\">\n                    <SectionVisualisationContainer />\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState) {\n    return {};\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators({}, dispatch);\n}\n\nexport const ResultViewContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_ResultViewContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { withTranslate } from \"../../i18n\";\nimport { AppState, NavigationActions } from \"../../state\";\n\nconst LOCALES = [\"en\", \"pl\"];\n\nclass _LocaleSwitch extends React.Component<any> {\n    render() {\n        const { t, setLocale } = this.props;\n\n        return (\n            <div className=\"d-flex\">\n                <span>{t(\"locale.selectLanguage\")}</span>\n                {LOCALES.map(locale => (\n                    <span\n                        key={locale}\n                        onClick={() => setLocale(locale)}\n                        className=\"pl-2 pointer\"\n                    >\n                        {t(`locale.${locale}`)}\n                    </span>\n                ))}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState) {\n    return {};\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators(\n        {\n            setLocale: NavigationActions.SetLocale\n        },\n        dispatch\n    );\n}\n\nexport const LocaleSwitch = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslate(_LocaleSwitch));\n","import React from 'react';\nimport { Translate } from 'react-i18nify';\nimport { LocaleSwitch } from '../containers';\n\nexport const NavigationFooter = () => (\n    <footer className=\"footer mt-auto py-3\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md-4\">\n                    <div className=\"text-muted\">\n                        <Translate value=\"application.footerName\" />\n                    </div>\n                </div>\n                <div className=\"col-12 col-md-4\">\n                    <div className=\"text-muted\">\n                        <LocaleSwitch />\n                    </div>\n                </div>\n                <div className=\"col-12 col-md-4 text-md-right\">\n                    <div className=\"text-muted\">\n                        <Translate dangerousHTML value=\"application.footerLink\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </footer>\n);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { I18n } from \"react-i18nify\";\nimport {\n    SectionTabs,\n    SectionFormContainer,\n    ResultViewContainer,\n    NavigationHeader,\n    NavigationFooter\n} from \"./core\";\n\nimport \"./style/style.scss\";\n\nclass App extends Component {\n    componentDidMount() {\n        document.title = I18n.t(\"application.title\");\n    }\n\n    render() {\n        return (\n            <>\n                <NavigationHeader />\n                <main role=\"main\" className=\"container\">\n                    <ResultViewContainer />\n                    <SectionTabs />\n                    <SectionFormContainer />\n                </main>\n                <NavigationFooter />\n            </>\n        );\n    }\n}\n\nexport default connect()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { LocaleConfig } from './i18n';\nimport { configureStore } from './state';\nimport { Provider } from 'react-redux';\n\nLocaleConfig.configure('pl');\n\nReactDOM.render(<Provider store={configureStore()}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}