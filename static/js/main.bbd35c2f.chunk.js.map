{"version":3,"sources":["fossil-usage/usage-calculator.ts","shared/components/Logo/logo.svg","fossil-usage/index.ts","shared/components/Logo/Logo.tsx","navigation/components/NavigationHeader.tsx","core/components/Page.tsx","state/util/action-helpers.util.ts","state/actions/navigation.actions.ts","state/constants/state.interface.ts","state/actions/fossil-usage.actions.ts","state/actions/fossil-emission.actions.ts","state/constants/initial-state.constant.ts","state/reducers/index.ts","state/reducers/navigation.reducer.ts","state/reducers/fossil-usage.reducer.ts","state/reducers/fossil-emission.reducer.ts","state/sagas/navigation.sagas.ts","state/sagas/fossil-emission.sagas.ts","state/sagas/index.ts","state/index.ts","shared/components/EmissionAlertBadge.tsx","shared/components/EmissionsChart.tsx","shared/components/EmissionCalculator.tsx","core/components/WelcomePage.tsx","App.tsx","serviceWorker.js","i18n/index.ts","index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","calculateFossilEmissions","WEEKS_PER_YEAR","EmissionConversion","perMeatDailyMeatConsumption","perKmOfCarTravel","perAnnualHourInAir","input","food","meatPerWeek","transport","carKmPerWeek","annualHoursInAir","result","module","exports","p","_usage_calculator__WEBPACK_IMPORTED_MODULE_0__","Logo","react_default","a","createElement","src","logo","className","alt","NavigationHeader","Logo_Logo","build","value","Page","_ref","children","role","createAction","type","payload","Section","SetNavigationSectionType","SetNavigationSection","section","DetermineNavigationSectionType","DetermineNavigationSection","PatchTransportUsageType","PatchTransportUsage","PatchFoodUsageType","PatchFoodUsage","ComputeFossilEmissionsType","ComputeFossilEmissions","SetFossilEmissionsResultType","SetFossilEmissionsResult","emissions","InitialAppState","navigation","Welcome","fossilUsage","fossilEmission","RootReducer","combineReducers","state","arguments","length","undefined","action","NavigationActions","Object","objectSpread","FossilUsageActions","FossilEmissionActions","logOnNavigateSaga","regenerator_default","mark","wrap","_context","prev","next","put","stop","this","NavigationSagas","takeEvery","computeFossilEmissionSaga","usage","emission","select","sent","FossilEmissionSagas","RootSaga","all","toConsumableArray","concat","_marked","composeEnhancers","window","compose","EmissionAlertBadge","reactstrap_es","color","EmissionsChart","limit","label","transportPerc","foodPerc","style","height","width","Math","round","backgroundColor","_EmissionCalculator","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","dropdownOpen","setState","prevState","_this$props","patchFoodUsage","isOpen","caret","onClick","_","_this$props2","patchTransportUsage","Fragment","addonType","placeholder","step","onChange","event","currentTarget","renderWeeklyMeatConsumptionDropdown","EmissionAlertBadge_EmissionAlertBadge","refEmissions","maxEmission","max","renderInputs","EmissionsChart_EmissionsChart","href","React","Component","EmissionCalculator","connect","dispatch","bindActionCreators","WelcomePage","App","document","title","I18n","t","NavigationHeader_NavigationHeader","Page_Page","WelcomePage_WelcomePage","Boolean","location","hostname","match","language","en","require","pl","setTranslations","setLocale","configureI18n","ReactDOM","render","es","store","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSagaTask","sagaTask","run","configureStore","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bbd35c2f.chunk.js","sourcesContent":["import { FossilUsageParams } from \"./types/fossil-usage-input.interface\";\nimport { FossilUsageResult } from \"./types/fossil-usage-result.interface\";\n\nconst WEEKS_PER_YEAR = 52;\n\nconst EmissionConversion = {\n    perMeatDailyMeatConsumption: 2,\n    perKmOfCarTravel: 0.001,\n    perAnnualHourInAir: 0.3,\n}\n\nexport function calculateFossilEmissions(input: FossilUsageParams): FossilUsageResult {\n    const food = input.food.meatPerWeek * EmissionConversion.perMeatDailyMeatConsumption;\n\n    const transport = input.transport.carKmPerWeek * WEEKS_PER_YEAR * EmissionConversion.perKmOfCarTravel\n        + input.transport.annualHoursInAir * EmissionConversion.perAnnualHourInAir;\n\n    return {\n        food,\n        transport,\n        result: food + transport\n    };\n};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export * from './usage-calculator';\nexport * from './types/fossil-usage-input.interface';\nexport * from './types/fossil-usage-result.interface';","import React from 'react';\nimport logo from './logo.svg';\nimport './logo.scss';\n\nexport const Logo = () => <img src={logo} className=\"App-logo\" alt=\"logo\" />;","import React from 'react';\nimport { Translate } from 'react-i18nify';\nimport { Logo } from '../../shared/components//Logo/Logo';\n\nexport const NavigationHeader = () => (\n    <header>\n        <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n            <span className=\"navbar-brand\">\n                <Logo />\n                <Translate value=\"application.title\" />\n            </span>\n        </nav>\n    </header>\n);","import React from 'react';\n\nexport const Page = ({ children }) => (\n    <main role=\"main\" className=\"container\">\n        {children}\n    </main>\n);","export interface TypedAction<T, P> {\n    readonly type: T;\n    readonly payload?: P;\n}\n\nexport function createAction<T extends string, P>(type: T, payload?: P): TypedAction<T, P> {\n    return { type, payload };\n}","import { createAction } from '../util';\nimport { Section } from '../constants';\n\nexport type ActionsTypes = SetNavigationSectionAction | DetermineNavigationSectionAction;\n\nexport const SetNavigationSectionType = '[NAVIGATION] SetNavigationSection';\nexport type SetNavigationSectionAction = ReturnType<typeof SetNavigationSection>;\nexport const SetNavigationSection = (section: Section) => createAction(SetNavigationSectionType, section);\n\nexport const DetermineNavigationSectionType = '[NAVIGATION] DetermineNavigationSection';\nexport type DetermineNavigationSectionAction = ReturnType<typeof DetermineNavigationSection>;\nexport const DetermineNavigationSection = () => createAction(DetermineNavigationSectionType);","import { FossilUsageParams, FossilUsageResult } from \"../../fossil-usage\";\n\nexport enum Section {\n    None = 'NONE',\n    Welcome = 'WELCOME',\n    Transport = 'TRANSPORT'\n}\n\nexport interface NavigationState {\n    section: Section;\n}\n\nexport type FossilUsageState = FossilUsageParams;\nexport type FossilEmissionState = FossilUsageResult;\n\nexport interface AppState {\n    navigation: NavigationState;\n    fossilUsage: FossilUsageState;\n    fossilEmission: FossilEmissionState;\n}","import { createAction } from '../util';\nimport { FossilUsageTransport, FossilUsageFood } from '../../fossil-usage';\n\nexport type ActionsTypes = PatchTransportUsageAction | PatchFoodUsageAction;\n\nexport const PatchTransportUsageType = '[FOSSIL_USAGE] PatchTransportUsage';\nexport type PatchTransportUsageAction = ReturnType<typeof PatchTransportUsage>;\nexport const PatchTransportUsage = (transport: FossilUsageTransport) => createAction(PatchTransportUsageType, transport);\n\nexport const PatchFoodUsageType = '[FOSSIL_USAGE] PatchFoodUsage';\nexport type PatchFoodUsageAction = ReturnType<typeof PatchFoodUsage>;\nexport const PatchFoodUsage = (food: FossilUsageFood) => createAction(PatchFoodUsageType, food);","import { createAction } from '../util';\nimport { FossilEmissionState } from '../constants';\n\nexport type ActionsTypes = ComputeFossilEmissionsAction | SetFossilEmissionsResultAction;\n\nexport const ComputeFossilEmissionsType = '[FOSSIL_EMISSIONS] ComputeFossilEmissions';\nexport type ComputeFossilEmissionsAction = ReturnType<typeof ComputeFossilEmissions>;\nexport const ComputeFossilEmissions = () => createAction(ComputeFossilEmissionsType);\n\nexport const SetFossilEmissionsResultType = '[FOSSIL_EMISSIONS] SetFossilEmissionsResult';\nexport type SetFossilEmissionsResultAction = ReturnType<typeof SetFossilEmissionsResult>;\nexport const SetFossilEmissionsResult = (emissions: FossilEmissionState) => createAction(SetFossilEmissionsResultType, emissions);","import { AppState, Section } from \"./state.interface\";\n\nexport const InitialAppState: AppState = {\n    navigation: {\n        section: Section.Welcome\n    },\n    fossilUsage: {\n        transport: {\n            carKmPerWeek: 0,\n            annualHoursInAir: 0\n        },\n        food: {\n            meatPerWeek: 1\n        }\n    },\n    fossilEmission: {\n        food: 0,\n        transport: 0,\n        result: 0\n    }\n}","import { combineReducers } from 'redux';\nimport { NavigationReducer } from './navigation.reducer';\nimport { FossilUsageReducer } from './fossil-usage.reducer';\nimport { FossilEmissionReducer } from './fossil-emission.reducer';\n\nexport const RootReducer = combineReducers({\n    navigation: NavigationReducer,\n    fossilUsage: FossilUsageReducer,\n    fossilEmission: FossilEmissionReducer\n});","import { NavigationActions } from '../actions';\nimport { InitialAppState, NavigationState } from '../constants';\n\nexport const NavigationReducer = (state: NavigationState = InitialAppState.navigation, action: NavigationActions.ActionsTypes): NavigationState => {\n    switch (action.type) {\n        case NavigationActions.SetNavigationSectionType:\n            return { ...state, section: action.payload };\n        default:\n            return state;\n    }\n};","import { FossilUsageActions } from '../actions';\nimport { InitialAppState, FossilUsageState } from '../constants';\n\nexport const FossilUsageReducer = (state: FossilUsageState = InitialAppState.fossilUsage, action: FossilUsageActions.ActionsTypes): FossilUsageState => {\n    switch (action.type) {\n        case FossilUsageActions.PatchTransportUsageType:\n            return { ...state, transport: { ...state.transport, ...action.payload } };\n        case FossilUsageActions.PatchFoodUsageType:\n            return { ...state, food: { ...state.food, ...action.payload } };\n        default:\n            return state;\n    }\n};","import { FossilEmissionActions } from '../actions';\nimport { InitialAppState, FossilEmissionState } from '../constants';\n\nexport const FossilEmissionReducer = (state: FossilEmissionState = InitialAppState.fossilEmission, action: FossilEmissionActions.ActionsTypes): FossilEmissionState => {\n    switch (action.type) {\n        case FossilEmissionActions.SetFossilEmissionsResultType:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};","import { takeEvery, put } from 'redux-saga/effects';\nimport { NavigationActions } from '../actions';\n\nexport const logOnNavigateSaga = function* (action: NavigationActions.SetNavigationSectionAction) {\n    yield put(NavigationActions.DetermineNavigationSection());\n};\n\nexport const NavigationSagas = [\n    takeEvery(NavigationActions.SetNavigationSectionType, logOnNavigateSaga)\n];","import { takeEvery, put, select } from 'redux-saga/effects';\nimport { FossilEmissionActions, FossilUsageActions } from '../actions';\nimport { AppState } from '../constants';\nimport { calculateFossilEmissions } from '../../fossil-usage';\n\nexport const computeFossilEmissionSaga = function* () {\n    const usage = yield select<AppState>(state => state.fossilUsage);\n\n    const emission = calculateFossilEmissions(usage);\n\n    yield put(FossilEmissionActions.SetFossilEmissionsResult(emission));\n};\n\nexport const FossilEmissionSagas = [\n    takeEvery([\n        FossilUsageActions.PatchTransportUsageType,\n        FossilUsageActions.PatchFoodUsageType\n    ], computeFossilEmissionSaga)\n];","import { all } from 'redux-saga/effects';\nimport { NavigationSagas } from './navigation.sagas';\nimport { FossilEmissionSagas } from './fossil-emission.sagas';\n\nexport function* RootSaga() {\n    yield all([\n        ...NavigationSagas,\n        ...FossilEmissionSagas\n    ]);\n}","export * from './actions';\nexport * from './constants';\n\nimport { applyMiddleware, compose, createStore, Store } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { AppState, InitialAppState } from './constants';\nimport { RootReducer } from './reducers';\nimport { RootSaga } from './sagas';\n\nconst composeEnhancers = (window as any)['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] || compose;\n\nexport const configureStore = (initialState: AppState = InitialAppState): Store<AppState> => {\n    const sagaMiddleware = createSagaMiddleware();\n\n    const store: any = createStore(RootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\n    store.runSagaTask = () => (store.sagaTask = sagaMiddleware.run(RootSaga as any));\n\n    store.runSagaTask();\n\n    return store;\n};","import React from 'react';\nimport { Translate } from 'react-i18nify';\nimport { Alert } from 'reactstrap';\n\nexport const EmissionAlertBadge = () => (\n    <Alert color=\"danger\">\n        <Translate value=\"emissions.yourEmissionsAreTooHigh\" />\n    </Alert>\n);\n","import React from 'react';\n\nexport const EmissionsChart = ({ emission, limit, label }) => {\n    const transportPerc = emission.transport / limit * 100;\n    const foodPerc = emission.food / limit * 100;\n\n    return (\n        <div className=\"d-flex flex-column justify-content-end align-items-center\" style={{ height: 300, width: 80 }}>\n            <small className=\"text-center font-weight-light\">{ label }</small>\n            <small className=\"font-weight-bold\">{Math.round(emission.result)} ton CO<sub>2</sub></small>\n            <div className=\"chart-segment\" style={{ height: `${transportPerc}%`, width: '100%', backgroundColor: 'MediumPurple' }}></div>\n            <div className=\"chart-segment\" style={{ height: `${foodPerc}%`, width: '100%', backgroundColor: 'MediumBlue' }}></div>\n        </div>\n    );\n}","import React from 'react';\nimport { Translate } from 'react-i18nify';\nimport { connect } from 'react-redux';\nimport { Card, CardBody, CardFooter, CardHeader, Input, InputGroup, InputGroupAddon, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { bindActionCreators } from 'redux';\nimport { AppState, FossilUsageActions } from '../../state';\nimport { EmissionAlertBadge } from './EmissionAlertBadge';\nimport { EmissionsChart } from './EmissionsChart';\n\nclass _EmissionCalculator extends React.Component<any, any> {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    toggle() {\n        this.setState(prevState => ({\n            dropdownOpen: !prevState.dropdownOpen\n        }));\n    }\n\n    renderWeeklyMeatConsumptionDropdown() {\n        const { food, patchFoodUsage } = this.props;\n\n        return (\n            <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                <DropdownToggle caret>\n                    { food.meatPerWeek } razy w tygodniu\n                </DropdownToggle>\n                <DropdownMenu>\n                    <DropdownItem onClick={_ => patchFoodUsage({ meatPerWeek: 0 })}>Jestem wegetarianinem/-ką</DropdownItem>\n                    <DropdownItem onClick={_ => patchFoodUsage({ meatPerWeek: 1 })}>Raz w tygodniu</DropdownItem>\n                    <DropdownItem onClick={_ => patchFoodUsage({ meatPerWeek: 7 })}>Codziennie</DropdownItem>\n                </DropdownMenu>\n            </Dropdown>\n        );\n    }\n\n    renderInputs() {\n        const { transport, patchTransportUsage, fossilEmission } = this.props;\n\n        return (\n            <React.Fragment>\n                <h4 className=\"font-weight-light\">Transport:</h4>\n                <div>\n                    <Translate className=\"font-weight-light\" value=\"transport.enterWeeklyCarUsage\" />\n                    <InputGroup>\n                        <InputGroupAddon addonType=\"prepend\">km</InputGroupAddon>\n                        <Input placeholder=\"Ile km podróżujesz samochodem tygodniowo\" type=\"number\" step=\"1\"\n                            value={transport.carKmPerWeek}\n                            onChange={event => patchTransportUsage({ carKmPerWeek: event.currentTarget.value })} />\n                    </InputGroup>\n                </div>\n                <div className=\"pt-3\">\n                    <Translate className=\"font-weight-light\" value=\"transport.enterAnnualPlaneHours\" />\n                    <InputGroup>\n                        <InputGroupAddon addonType=\"prepend\">godziny</InputGroupAddon>\n                        <Input placeholder=\"Ile godzin spędzasz rocznie w podróży samolotem?\" type=\"number\" step=\"1\"\n                            value={transport.annualHoursInAir}\n                            onChange={event => patchTransportUsage({ annualHoursInAir: event.currentTarget.value })} />\n                    </InputGroup>\n                </div>\n                <hr className=\"m-4\" />\n                <h4 className=\"font-weight-light\">Żywność:</h4>\n                <div>\n                    <Translate className=\"font-weight-light\" value=\"food.howOftenDoYouConsumeFood\" />\n                    {this.renderWeeklyMeatConsumptionDropdown()}\n                </div>\n                <hr className=\"m-4\" />\n                <div>\n                    <h6>\n                        <Translate value=\"emissions.yourAnnualEmissionsAre\" emissions={Math.round(fossilEmission.result)} />\n                    </h6>\n                    <EmissionAlertBadge />\n                </div>\n            </React.Fragment>\n        )\n    }\n    render() {\n        const { fossilEmission } = this.props;\n        const refEmissions = { food: 6, transport: 19, result: 25 };\n        const maxEmission = 1.2 * Math.max(refEmissions.result, fossilEmission.result);\n\n        return (\n            <React.Fragment>\n                <Card>\n                    <CardHeader>\n                        <h4 className=\"font-weight-light\">\n                            <Translate value=\"application.title\" />\n                        </h4>\n                    </CardHeader>\n                    <CardBody>\n                        <div className=\"row\">\n                            <div className=\"col-12 col-md-6\">\n                                {this.renderInputs()}\n                            </div>\n                            <div className=\"col-6 col-md-3 d-flex flex-column align-items-center\">\n                                <EmissionsChart emission={fossilEmission} limit={maxEmission} label='Twoja emisja' />\n                            </div>\n                            <div className=\"col-6 col-md-3 d-flex flex-column align-items-center\">\n                                <EmissionsChart emission={refEmissions} limit={maxEmission} label='Średnia' />\n                            </div>\n                        </div>\n                    </CardBody>\n                    <CardFooter>\n                        <div className=\"font-weight-light d-flex justify-content-between\">\n                            <span>Wersja demo zmodernizowanego kalkulatora CO2</span>\n                            <span>Więcej na <a href=\"https://ziemianarozdrozu.pl/\">ziemianarozdrozu.pl</a></span>\n                        </div>\n                    </CardFooter>\n                </Card>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction mapStateToProps({ fossilUsage, fossilEmission }: AppState) {\n    return {\n        transport: fossilUsage.transport,\n        food: fossilUsage.food,\n        fossilEmission: fossilEmission\n    };\n};\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators(\n        {\n            patchTransportUsage: FossilUsageActions.PatchTransportUsage,\n            patchFoodUsage: FossilUsageActions.PatchFoodUsage\n        },\n        dispatch\n    );\n}\n\nexport const EmissionCalculator = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_EmissionCalculator);","import React from 'react';\nimport { EmissionCalculator } from '../../shared/components/EmissionCalculator';\n\nexport const WelcomePage = () => (\n    <div className=\"row\">\n        <div className=\"col-12\">\n            <EmissionCalculator />\n        </div>\n    </div>\n);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { I18n } from 'react-i18nify';\n\nimport './style/style.scss';\n\nimport { NavigationHeader } from './navigation/components/NavigationHeader';\nimport { Page } from './core/components/Page';\nimport { WelcomePage } from './core/components/WelcomePage';\n\nclass App extends Component {\n    componentDidMount() {\n        document.title = I18n.t('application.title');\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <NavigationHeader />\n                <Page>\n                    <WelcomePage />\n                </Page>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default connect()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { I18n } from 'react-i18nify';\n\nexport function configureI18n(language: string) {\n    const en = require('./languages/en.json');\n    const pl = require('./languages/pl.json');\n    \n    I18n.setTranslations({ en, pl });\n    \n    I18n.setLocale(language);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureI18n } from './i18n';\nimport { configureStore } from './state';\nimport { Provider } from 'react-redux';\n\nconfigureI18n('pl');\n\nReactDOM.render(<Provider store={configureStore()}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}