{"version":3,"sources":["emission-calculator/input/index.ts","emission-calculator/result/index.ts","emission-calculator/constants/emission-calculator.constant.ts","emission-calculator/calculator/emission-calculator.ts","emission-calculator/calculator/index.ts","shared/components/Logo/logo.svg","emission-calculator/index.ts","shared/components/Logo/Logo.tsx","shared/components/EmissionAlertBadge.tsx","core/components/NavigationHeader.tsx","core/components/NavigationFooter.tsx","state/util/action-helpers.util.ts","state/actions/navigation.actions.ts","state/constants/state.interface.ts","state/actions/emission-input.actions.ts","state/actions/emission-result.actions.ts","state/constants/initial-state.constant.ts","state/reducers/index.ts","state/reducers/navigation.reducer.ts","state/reducers/fossil-usage.reducer.ts","state/reducers/fossil-emission.reducer.ts","state/sagas/navigation.sagas.ts","state/sagas/emission-result.sagas.ts","state/sagas/index.ts","state/index.ts","emission-forms/components/LabelledDropdown.tsx","emission-forms/components/LabelledInput.tsx","emission-forms/components/EmissionFormWrapper.tsx","emission-forms/containers/EmissionCalculator.tsx","core/containers/SectionFormContainer.tsx","core/containers/SectionTabs.tsx","emission-chart/components/EmissionsChart.tsx","emission-chart/containers/EmissionChartContainer.tsx","core/containers/SectionVisualisationContainer.tsx","core/containers/ResultViewContainer.tsx","App.tsx","serviceWorker.js","i18n/index.ts","index.tsx"],"names":["__webpack_require__","WeeksPerYear","FoodEmissionParams","perMeatDailyMeatConsumption","TransportEmissionParams","perKmOfCarTravel","perAnnualHourInAir","calculateEmissionResults","input","food","meatPerWeek","transport","carKmPerWeek","annualHoursInAir","result","d","__webpack_exports__","module","exports","p","_calculator__WEBPACK_IMPORTED_MODULE_0__","Logo","react_default","a","createElement","src","logo","className","alt","EmissionAlertBadge","reactstrap_es","color","build","value","NavigationHeader","Logo_Logo","NavigationFooter","href","createAction","type","payload","Section","SetNavigationSectionType","SetNavigationSection","section","DetermineNavigationSectionType","DetermineNavigationSection","UpdatePublicTransportType","UpdatePublicTransport","UpdateFoodType","UpdateFood","CalculateEmissionResultsType","CalculateEmissionResults","SetEmissionsResultType","SetEmissionsResult","emissions","InitialAppState","navigation","Housing","emissionInput","emissionResult","RootReducer","combineReducers","state","arguments","length","undefined","action","NavigationActions","Object","objectSpread","EmissionInputActions","EmissionResultActions","logOnNavigateSaga","regenerator_default","mark","wrap","_context","prev","next","put","stop","this","NavigationSagas","takeEvery","calculateEmissionResultSaga","select","sent","call","EmissionResultSagas","RootSaga","all","toConsumableArray","concat","_marked","composeEnhancers","window","compose","LabelledDropdown","_React$Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","isOpen","toggleDropdown","bind","assertThisInitialized","inherits","createClass","key","event","setState","prevState","_this$props","valueChange","options","currentLabel","find","option","toggle","caret","label","map","onClick","React","Component","LabelledInput","apply","addon","placeholder","addonType","onChange","currentTarget","EmissionFormWrapper","_ref","title","footer","children","_EmissionCalculator","Fragment","LabelledInput_LabelledInput","_this$props2","LabelledDropdown_LabelledDropdown","EmissionFormWrapper_EmissionFormWrapper","renderSectionA","renderSectionB","EmissionCalculator","connect","dispatch","bindActionCreators","_SectionFormContainer","activeTab","tabId","WaterAndAirConditioning","PrivateTransport","SectionFormContainer","SECTION_ITEMS","PublicTransport","Food","Consumption","_SectionTabs","activeSection","setSection","classnames","active","tabs","item","renderLink","SectionTabs","_ref2","EmissionsChart","emission","limit","transportPerc","foodPerc","style","height","width","Math","round","backgroundColor","_EmissionChartContainer","refEmissions","maxEmission","max","EmissionsChart_EmissionsChart","EmissionChartContainer","_SectionVisualisationContainer","SectionVisualisationContainer","_ResultViewContainer","EmissionAlertBadge_EmissionAlertBadge","ResultViewContainer","App","document","I18n","t","NavigationHeader_NavigationHeader","role","NavigationFooter_NavigationFooter","Boolean","location","hostname","match","language","en","require","pl","setTranslations","setLocale","configureI18n","ReactDOM","render","es","store","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","runSagaTask","sagaTask","run","configureStore","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5407f543.chunk.js","sourcesContent":["export * from './emission-input.interface';\r\n","export * from './emission-result.interface';\r\n","export const WeeksPerYear = 52;\n\nexport const FoodEmissionParams = {\n    perMeatDailyMeatConsumption: 2,\n};\n\nexport const TransportEmissionParams = {\n    perKmOfCarTravel: 0.001,\n    perAnnualHourInAir: 0.3\n};","import { EmissionInput } from \"../input/emission-input.interface\";\nimport { EmissionResult } from \"../result/emission-result.interface\";\nimport { WeeksPerYear } from \"../constants\";\nimport { FoodEmissionParams, TransportEmissionParams } from \"../constants\";\n\nexport function calculateEmissionResults(input: EmissionInput): EmissionResult {\n    const food = input.food.meatPerWeek * FoodEmissionParams.perMeatDailyMeatConsumption;\n\n    const transport = input.transport.carKmPerWeek * WeeksPerYear * TransportEmissionParams.perKmOfCarTravel\n        + input.transport.annualHoursInAir * TransportEmissionParams.perAnnualHourInAir;\n\n    return {\n        food,\n        transport,\n        result: food + transport\n    };\n};","export * from './emission-calculator';\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export * from './calculator';\r\nexport * from './input';\r\nexport * from './result';\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './logo.scss';\n\nexport const Logo = () => <img src={logo} className=\"App-logo\" alt=\"logo\" />;","import React from 'react';\nimport { Translate } from 'react-i18nify';\nimport { Alert } from 'reactstrap';\n\nexport const EmissionAlertBadge = () => (\n    <Alert color=\"danger\">\n        <Translate value=\"emissions.yourEmissionsAreTooHigh\" />\n    </Alert>\n);\n","import React from 'react';\nimport { Translate } from 'react-i18nify';\nimport { Logo } from '../../shared';\n\nexport const NavigationHeader = () => (\n    <header>\n        <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\n            <span className=\"navbar-brand\">\n                <Logo />\n                <Translate value=\"application.title\" />\n            </span>\n        </nav>\n    </header>\n);","import React from 'react';\n\nexport const NavigationFooter = () => (\n    <footer className=\"footer mt-auto py-3\">\n        <div className=\"container d-flex justify-content-between\">\n            <span className=\"text-muted\">\n                Wersja demo zmodernizowanego kalkulatora CO2\n            </span>\n            <span className=\"text-muted\">\n                Więcej na <a href=\"https://ziemianarozdrozu.pl/\">ziemianarozdrozu.pl</a>\n            </span>\n        </div>\n    </footer>\n);","export interface TypedAction<T, P> {\n    readonly type: T;\n    readonly payload?: P;\n}\n\nexport function createAction<T extends string, P>(type: T, payload?: P): TypedAction<T, P> {\n    return { type, payload };\n}","import { createAction } from '../util';\nimport { Section } from '../constants';\n\nexport type ActionsTypes = SetNavigationSectionAction | DetermineNavigationSectionAction;\n\nexport const SetNavigationSectionType = '[NAVIGATION] SetNavigationSection';\nexport type SetNavigationSectionAction = ReturnType<typeof SetNavigationSection>;\nexport const SetNavigationSection = (section: Section) => createAction(SetNavigationSectionType, section);\n\nexport const DetermineNavigationSectionType = '[NAVIGATION] DetermineNavigationSection';\nexport type DetermineNavigationSectionAction = ReturnType<typeof DetermineNavigationSection>;\nexport const DetermineNavigationSection = () => createAction(DetermineNavigationSectionType);","import { EmissionInput, EmissionResult } from \"../../emission-calculator\";\n\nexport enum Section {\n    Country = 'COUNTRY',\n    Housing = 'HOUSING',\n    WaterAndAirConditioning = 'WATER_AND_AIR_CONDITIONING',\n    PrivateTransport = 'PRIVATE_TRANSPORT',\n    PublicTransport = 'PUBLIC_TRANSPORT',\n    Food = 'FOOD',\n    Consumption = 'CONSUMPTION',\n    EmissionResults = 'EMISSION_RESULTS'\n}\n\nexport interface NavigationState {\n    section: Section;\n}\n\nexport type EmissionInputState = EmissionInput;\nexport type EmissionResultState = EmissionResult;\n\nexport interface AppState {\n    navigation: NavigationState;\n    emissionInput: EmissionInputState;\n    emissionResult: EmissionResultState;\n}","import { createAction } from '../util';\nimport { EmissionInputTransport, EmissionInputFood } from '../../emission-calculator';\n\nexport type ActionsTypes = UpdatePublicTransportAction | UpdateFoodAction;\n\nexport const UpdatePublicTransportType = '[FOSSIL_USAGE] UpdatePublicTransport';\nexport type UpdatePublicTransportAction = ReturnType<typeof UpdatePublicTransport>;\nexport const UpdatePublicTransport = (transport: EmissionInputTransport) => createAction(UpdatePublicTransportType, transport);\n\nexport const UpdateFoodType = '[FOSSIL_USAGE] UpdateFood';\nexport type UpdateFoodAction = ReturnType<typeof UpdateFood>;\nexport const UpdateFood = (food: EmissionInputFood) => createAction(UpdateFoodType, food);","import { createAction } from '../util';\nimport { EmissionResultState } from '../constants';\n\nexport type ActionsTypes = CalculateEmissionResultsAction | SetEmissionsResultAction;\n\nexport const CalculateEmissionResultsType = '[EMISSION_RESULT] CalculateEmissionResults';\nexport type CalculateEmissionResultsAction = ReturnType<typeof CalculateEmissionResults>;\nexport const CalculateEmissionResults = () => createAction(CalculateEmissionResultsType);\n\nexport const SetEmissionsResultType = '[EMISSION_RESULT] SetEmissionsResult';\nexport type SetEmissionsResultAction = ReturnType<typeof SetEmissionsResult>;\nexport const SetEmissionsResult = (emissions: EmissionResultState) => createAction(SetEmissionsResultType, emissions);","import { AppState, Section } from \"./state.interface\";\n\nexport const InitialAppState: AppState = {\n    navigation: {\n        section: Section.Housing\n    },\n    emissionInput: {\n        transport: {\n            carKmPerWeek: null,\n            annualHoursInAir: null\n        },\n        food: {\n            meatPerWeek: 1\n        }\n    },\n    emissionResult: {\n        food: 0,\n        transport: 0,\n        result: 0\n    } as any\n}","import { combineReducers } from 'redux';\nimport { NavigationReducer } from './navigation.reducer';\nimport { emissionInputReducer } from './fossil-usage.reducer';\nimport { emissionResultReducer } from './fossil-emission.reducer';\n\nexport const RootReducer = combineReducers({\n    navigation: NavigationReducer,\n    emissionInput: emissionInputReducer,\n    emissionResult: emissionResultReducer\n});","import { NavigationActions } from '../actions';\nimport { InitialAppState, NavigationState } from '../constants';\n\nexport const NavigationReducer = (state: NavigationState = InitialAppState.navigation, action: NavigationActions.ActionsTypes): NavigationState => {\n    switch (action.type) {\n        case NavigationActions.SetNavigationSectionType:\n            return { ...state, section: action.payload };\n        default:\n            return state;\n    }\n};","import { EmissionInputActions } from '../actions';\nimport { InitialAppState, EmissionInputState } from '../constants';\n\nexport const emissionInputReducer = (state: EmissionInputState = InitialAppState.emissionInput, action: EmissionInputActions.ActionsTypes): EmissionInputState => {\n    switch (action.type) {\n        case EmissionInputActions.UpdatePublicTransportType:\n            return { ...state, transport: { ...state.transport, ...action.payload } };\n        case EmissionInputActions.UpdateFoodType:\n            return { ...state, food: { ...state.food, ...action.payload } };\n        default:\n            return state;\n    }\n};","import { EmissionResultActions } from '../actions';\nimport { InitialAppState, EmissionResultState } from '../constants';\n\nexport const emissionResultReducer = (state: EmissionResultState = InitialAppState.emissionResult, action: EmissionResultActions.ActionsTypes): EmissionResultState => {\n    switch (action.type) {\n        case EmissionResultActions.SetEmissionsResultType:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};","import { takeEvery, put } from 'redux-saga/effects';\nimport { NavigationActions } from '../actions';\n\nexport const logOnNavigateSaga = function* (action: NavigationActions.SetNavigationSectionAction) {\n    yield put(NavigationActions.DetermineNavigationSection());\n};\n\nexport const NavigationSagas = [\n    takeEvery(NavigationActions.SetNavigationSectionType, logOnNavigateSaga)\n];","import { takeEvery, put, select, call } from 'redux-saga/effects';\nimport { EmissionResultActions, EmissionInputActions } from '../actions';\nimport { AppState } from '../constants';\nimport { calculateEmissionResults } from '../../emission-calculator';\n\nexport const calculateEmissionResultSaga = function* () {\n    const emissionInput = yield select<AppState>(state => state.emissionInput);\n\n    const emissionResult = yield call(calculateEmissionResults, emissionInput);\n\n    yield put(EmissionResultActions.SetEmissionsResult(emissionResult));\n};\n\nexport const EmissionResultSagas = [\n    takeEvery([\n        EmissionInputActions.UpdatePublicTransportType,\n        EmissionInputActions.UpdateFoodType\n    ], calculateEmissionResultSaga)\n];","import { all } from 'redux-saga/effects';\nimport { NavigationSagas } from './navigation.sagas';\nimport { EmissionResultSagas } from './emission-result.sagas';\n\nexport function* RootSaga() {\n    yield all([\n        ...NavigationSagas,\n        ...EmissionResultSagas\n    ]);\n}","export * from './actions';\nexport * from './constants';\n\nimport { applyMiddleware, compose, createStore, Store } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { AppState, InitialAppState } from './constants';\nimport { RootReducer } from './reducers';\nimport { RootSaga } from './sagas';\n\nconst composeEnhancers = (window as any)['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] || compose;\n\nexport const configureStore = (initialState: AppState = InitialAppState): Store<AppState> => {\n    const sagaMiddleware = createSagaMiddleware();\n\n    const store: any = createStore(RootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\n    store.runSagaTask = () => (store.sagaTask = sagaMiddleware.run(RootSaga as any));\n\n    store.runSagaTask();\n\n    return store;\n};","import React from 'react';\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\n\ntype Option = { value: any, label: string };\n\ninterface Props {\n    value: any;\n    valueChange: (value: any) => any;\n    options: Option[];\n}\n\nexport class LabelledDropdown extends React.Component<Props, any> {\n    constructor(props: any) {\n        super(props);\n        this.state = { isOpen: false };\n\n        this.toggleDropdown = this.toggleDropdown.bind(this);\n    }\n\n    toggleDropdown(event: Event) {\n        this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n    }\n\n    render() {\n        const { value, valueChange, options } = this.props;\n\n        const currentLabel = options.find(option => option.value === value);\n\n        return (\n            <Dropdown isOpen={this.state.isOpen} toggle={this.toggleDropdown}>\n                <DropdownToggle color=\"info\" caret>\n                    { currentLabel ? currentLabel.label : value }\n                </DropdownToggle>\n                <DropdownMenu>\n                    {\n                        options.map(option => (\n                            <DropdownItem key={option.value} onClick={() => valueChange(option.value)}>\n                                { option.label }\n                            </DropdownItem>\n                        ))\n                    }\n                </DropdownMenu>\n            </Dropdown>\n        );\n    }\n}","import React from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\n\ninterface Props {\n    addon?: string;\n    placeholder?: string;\n    value: any;\n    valueChange: (value: any) => any;\n}\n\nexport class LabelledInput extends React.Component<Props> {\n    render() {\n        const { value, valueChange, addon, placeholder } = this.props;\n\n        return (\n            <InputGroup>\n                {addon ? (\n                    <InputGroupAddon addonType=\"prepend\">\n                        {addon}\n                    </InputGroupAddon>\n                ) : null}\n                <Input\n                    placeholder={placeholder}\n                    type=\"number\"\n                    value={value || ''}\n                    onChange={event => valueChange(event.currentTarget.value)}\n                />\n            </InputGroup>\n        );\n    }\n}\n","import React from \"react\";\nimport { Translate } from \"react-i18nify\";\nimport { Card, CardBody, CardFooter, CardHeader } from \"reactstrap\";\n\nexport const EmissionFormWrapper = ({ title, footer, children }: any) => (\n    <Card>\n        <CardHeader>\n            <Translate className=\"font-weight-light\" value={title} />\n        </CardHeader>\n        <CardBody>{children}</CardBody>\n        <CardFooter>\n            <div className=\"font-weight-light d-flex justify-content-between\">\n                {footer ? <Translate value={footer} /> : null}\n            </div>\n        </CardFooter>\n    </Card>\n);\n","import React from 'react';\nimport { Translate } from 'react-i18nify';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { AppState, EmissionInputActions } from '../../state';\nimport { EmissionFormWrapper, LabelledDropdown, LabelledInput } from '../components';\n\nclass _EmissionCalculator extends React.Component<any> {\n    renderSectionA() {\n        const { transport, UpdatePublicTransport } = this.props;\n\n        return (\n            <>\n                <h4 className=\"font-weight-light\">Transport:</h4>\n                <div>\n                    <Translate className=\"font-weight-light\" value=\"transport.enterWeeklyCarUsage\" />\n                    <div className=\"w-50\">\n                        <LabelledInput\n                            addon=\"km\"\n                            placeholder=\"Ile km podróżujesz samochodem tygodniowo?\"\n                            value={transport.carKmPerWeek}\n                            valueChange={value => UpdatePublicTransport({ carKmPerWeek: value })}>\n                        </LabelledInput>\n                    </div>\n                </div>\n                <div className=\"pt-3\">\n                    <Translate className=\"font-weight-light\" value=\"transport.enterAnnualPlaneHours\" />\n                    <div className=\"w-50\">\n                        <LabelledInput\n                            addon=\"godziny\"\n                            placeholder=\"Ile godzin spędzasz rocznie w podróży samolotem?\"\n                            value={transport.annualHoursInAir}\n                            valueChange={value => UpdatePublicTransport({ annualHoursInAir: value })}>\n                        </LabelledInput>\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n\n    renderSectionB() {\n        const { food, UpdateFood } = this.props;\n\n        const options = [\n            { value: 0, label: 'Jestem wegetarianinem/-ką' },\n            { value: 1, label: 'Raz w tygodniu' },\n            { value: 2, label: 'Dość rzadko' },\n            { value: 7, label: 'Codziennie' }\n        ];\n\n        return (\n            <>\n                <h4 className=\"font-weight-light\">Żywność:</h4>\n                <div>\n                    <Translate className=\"font-weight-light\" value=\"food.howOftenDoYouConsumeFood\" />\n                    <LabelledDropdown \n                        value={food.meatPerWeek}\n                        valueChange={value => UpdateFood({ meatPerWeek: value })}\n                        options={options}>\n                    </LabelledDropdown>\n                </div>\n            </>\n        );\n    }\n\n    render() {\n        return (\n            <EmissionFormWrapper title=\"Housing\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        {this.renderSectionA()}\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        {this.renderSectionB()}\n                    </div>\n                </div>\n            </EmissionFormWrapper>\n        );\n    }\n}\n\nfunction mapStateToProps({ emissionInput }: AppState) {\n    return {\n        transport: emissionInput.transport,\n        food: emissionInput.food\n    };\n};\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators(\n        {\n            UpdatePublicTransport: EmissionInputActions.UpdatePublicTransport,\n            UpdateFood: EmissionInputActions.UpdateFood\n        },\n        dispatch\n    );\n}\n\nexport const EmissionCalculator = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_EmissionCalculator);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { TabContent, TabPane } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { AppState, Section } from \"../../state\";\nimport { EmissionCalculator } from \"../../emission-forms\";\n\nexport class _SectionFormContainer extends React.Component<any> {\n    render() {\n        const { section } = this.props;\n\n        return (\n            <TabContent activeTab={section}>\n                <TabPane tabId={Section.Housing}>\n                    <EmissionCalculator />\n                </TabPane>\n                <TabPane tabId={Section.WaterAndAirConditioning}>\n                    <EmissionCalculator />\n                </TabPane>\n                <TabPane tabId={Section.PrivateTransport}>\n                    <EmissionCalculator />\n                </TabPane>\n            </TabContent>\n        );\n    }\n}\n\nfunction mapStateToProps({ navigation }: AppState) {\n    return {\n        section: navigation.section\n    };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators({}, dispatch);\n}\n\nexport const SectionFormContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_SectionFormContainer);\n","import classnames from \"classnames\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\nimport { bindActionCreators } from \"redux\";\nimport { AppState, NavigationActions, Section } from \"../../state\";\nimport { Translate } from 'react-i18nify';\n\nconst SECTION_ITEMS = [\n    { section: Section.Housing, label: \"section.housing\" },\n    {\n        section: Section.WaterAndAirConditioning,\n        label: \"section.waterAndAirConditioning\"\n    },\n    { section: Section.PrivateTransport, label: \"section.privateTransport\" },\n    { section: Section.PublicTransport, label: \"section.publicTransport\" },\n    { section: Section.Food, label: \"section.food\" },\n    { section: Section.Consumption, label: \"section.consumption\" }\n    // { section: Section.EmissionResults, label: \"section.emissionResults\" }\n];\n\nexport class _SectionTabs extends React.Component<any> {\n    renderLink({ section, label }) {\n        const { activeSection, setSection } = this.props;\n\n        return (\n            <NavLink\n                className={classnames({\n                    active: section === activeSection\n                })}\n                onClick={() => {\n                    setSection(section);\n                }}\n            >\n                <Translate value={label} />\n            </NavLink>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Nav tabs>\n                    {SECTION_ITEMS.map(item => (\n                        <NavItem key={item.section}>{this.renderLink(item)}</NavItem>\n                    ))}\n                </Nav>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({ navigation }: AppState) {\n    return {\n        activeSection: navigation.section\n    };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators(\n        {\n            setSection: NavigationActions.SetNavigationSection\n        },\n        dispatch\n    );\n}\n\nexport const SectionTabs = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_SectionTabs);\n","import React from 'react';\n\nexport const EmissionsChart = ({ emission, limit, label }) => {\n    const transportPerc = emission.transport / limit * 100;\n    const foodPerc = emission.food / limit * 100;\n\n    return (\n        <div className=\"d-flex flex-column justify-content-end align-items-center\" style={{ height: 300, width: 80 }}>\n            <small className=\"text-center font-weight-light\">{ label }</small>\n            <small className=\"font-weight-bold\">{Math.round(emission.result)} ton CO<sub>2</sub></small>\n            <div className=\"chart-segment\" style={{ height: `${transportPerc}%`, width: '100%', backgroundColor: 'MediumPurple' }}></div>\n            <div className=\"chart-segment\" style={{ height: `${foodPerc}%`, width: '100%', backgroundColor: 'MediumBlue' }}></div>\n        </div>\n    );\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { EmissionsChart } from \"../../emission-chart/components/EmissionsChart\";\nimport { AppState } from \"../../state\";\n\nclass _EmissionChartContainer extends React.Component<any, any> {\n    render() {\n        const { emissionResult } = this.props;\n        const refEmissions = { food: 6, transport: 19, result: 25 };\n        const maxEmission =\n            1.2 * Math.max(refEmissions.result, emissionResult.result);\n\n        return (\n            <div className=\"d-flex justify-content-around\">\n                <EmissionsChart\n                    emission={emissionResult}\n                    limit={maxEmission}\n                    label=\"Twoja emisja\"\n                />\n                <EmissionsChart\n                    emission={refEmissions}\n                    limit={maxEmission}\n                    label=\"Średnia\"\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({ emissionResult }: AppState) {\n    return {\n        emissionResult: emissionResult\n    };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators({}, dispatch);\n}\n\nexport const EmissionChartContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_EmissionChartContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { AppState, Section } from \"../../state\";\n\nexport class _SectionVisualisationContainer extends React.Component<any> {\n    render() {\n        const { section } = this.props;\n\n        switch (section) {\n            case Section.Housing:\n                return <img className=\"w-100\" src=\"images/ui/314.jpg\" alt=\"housing\" />;\n            case Section.WaterAndAirConditioning:\n                return <img className=\"w-100\" src=\"images/ui/111.jpg\" alt=\"water and air conditioning\" />;\n            case Section.PublicTransport:\n                return <img className=\"w-100\" src=\"images/ui/367.jpg\" alt=\"public transport\" />;\n            case Section.PrivateTransport:\n                return <img className=\"w-100\" src=\"images/ui/96.jpg\" alt=\"private transport\" />;\n            case Section.Food:\n                return <img className=\"w-100\" src=\"images/ui/292.jpg\" alt=\"food\" />;\n            case Section.Consumption:\n                return <img className=\"w-100\" src=\"images/ui/392.jpg\" alt=\"consumption\" />;\n            default:\n                return null;\n        }\n    }\n}\n\nfunction mapStateToProps({ navigation }: AppState) {\n    return {\n        section: navigation.section\n    };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators({}, dispatch);\n}\n\nexport const SectionVisualisationContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_SectionVisualisationContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { EmissionChartContainer } from \"../../emission-chart\";\nimport { EmissionAlertBadge } from \"../../shared/components/EmissionAlertBadge\";\nimport { AppState } from \"../../state\";\nimport { SectionVisualisationContainer } from \"./SectionVisualisationContainer\";\n\nclass _ResultViewContainer extends React.Component<any, any> {\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12 col-md-4\">\n                    <div className=\"m-4\">\n                        <EmissionChartContainer />\n                    </div>\n                    <hr />\n                    <EmissionAlertBadge />\n                </div>\n                <div className=\"col-12 col-md-8\">\n                    <SectionVisualisationContainer />\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: AppState) {\n    return {};\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return bindActionCreators({}, dispatch);\n}\n\nexport const ResultViewContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_ResultViewContainer);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { I18n } from \"react-i18nify\";\nimport {\n    SectionTabs,\n    SectionFormContainer,\n    ResultViewContainer,\n    NavigationHeader,\n    NavigationFooter\n} from \"./core\";\n\nimport \"./style/style.scss\";\n\nclass App extends Component {\n    componentDidMount() {\n        document.title = I18n.t(\"application.title\");\n    }\n\n    render() {\n        return (\n            <>\n                <NavigationHeader />\n                <main role=\"main\" className=\"container\">\n                    <ResultViewContainer />\n                    <SectionTabs />\n                    <SectionFormContainer />\n                </main>\n                <NavigationFooter />\n            </>\n        );\n    }\n}\n\nexport default connect()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { I18n } from 'react-i18nify';\n\nexport function configureI18n(language: string) {\n    const en = require('./languages/en.json');\n    const pl = require('./languages/pl.json');\n    \n    I18n.setTranslations({ en, pl });\n    \n    I18n.setLocale(language);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureI18n } from './i18n';\nimport { configureStore } from './state';\nimport { Provider } from 'react-redux';\n\nconfigureI18n('pl');\n\nReactDOM.render(<Provider store={configureStore()}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}